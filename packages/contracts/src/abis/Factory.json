{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "contractUri",
          "type": "string"
        }
      ],
      "name": "Deployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "org",
          "type": "address"
        }
      ],
      "name": "Refuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "org",
          "type": "address"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractUri",
          "type": "string"
        }
      ],
      "name": "deployToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTrustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "org",
          "type": "address"
        }
      ],
      "name": "refute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_metaAddress",
          "type": "address"
        }
      ],
      "name": "setMetaAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "verified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "org",
          "type": "address"
        }
      ],
      "name": "verify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506040516135e23803806135e283398101604081905261002f916100a4565b610037610070565b600180546001600160a01b0319166001600160a01b03928316179055600080546001600160a81b031916918316919091179055506100d4565b60006014361080159061008d57506000546001600160a01b031633145b1561009f575060131936013560601c90565b503390565b6000602082840312156100b657600080fd5b81516001600160a01b03811681146100cd57600080fd5b9392505050565b6134ff806100e36000396000f3fe60806040523480156200001157600080fd5b5060043610620000b75760003560e01c80635c975abb116200007a5780635c975abb146200016f57806363a9c3d714620001825780638456cb5914620001995780638da5cb5b14620001a3578063ce1b815f14620001b7578063dcbf6b1414620001c957600080fd5b80630db065f414620000bc5780631166b54b14620000f75780633f4ba83a1462000110578063457902d2146200011a578063572b6c05146200014a575b600080fd5b620000e2620000cd36600462000896565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6200010e6200010836600462000896565b620001e0565b005b6200010e6200031b565b620001316200012b36600462000973565b620003af565b6040516001600160a01b039091168152602001620000ee565b620000e26200015b36600462000896565b6000546001600160a01b0391821691161490565b600054600160a01b900460ff16620000e2565b6200010e6200019336600462000896565b620005c1565b6200010e6200072f565b60015462000131906001600160a01b031681565b6000546001600160a01b031662000131565b6200010e620001da36600462000896565b620007ac565b6001546001600160a01b0316620001f662000852565b6001600160a01b031614620002285760405162461bcd60e51b81526004016200021f9062000a05565b60405180910390fd5b6040516301ffc9a760e01b8152637c026df360e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801562000274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029a919062000a3c565b1515600114620002f95760405162461bcd60e51b815260206004820152602360248201527f494d657461486f6c64657220696e74657266616365206e6f7420737570706f726044820152621d195960ea1b60648201526084016200021f565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03166200033162000852565b6001600160a01b0316146200035a5760405162461bcd60e51b81526004016200021f9062000a05565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6200039262000852565b6040516001600160a01b03909116815260200160405180910390a1565b6001546000906001600160a01b0316331480620003d65750600054600160a01b900460ff16155b6200040e5760405162461bcd60e51b81526020600482015260076024820152665061757365642160c81b60448201526064016200021f565b600060405180602001620004229062000888565b601f1982820381018352601f909101166040528585856200044262000852565b6002546040516200046495949392916001600160a01b03169060200162000ab4565b60408051601f198184030181529082905262000484929160200162000b19565b60405160208183030381529060405290506000620004a162000852565b604051602001620004ca919060609190911b6bffffffffffffffffffffffff1916815260140190565b604051602081830303815290604052805190602001209050808251602084016000f59250823b620004fa57600080fd5b60025460405163a326424f60e01b81526001600160a01b039091169063a326424f906200052e908690889060040162000b4c565b600060405180830381600087803b1580156200054957600080fd5b505af11580156200055e573d6000803e3d6000fd5b505050506200056c62000852565b6001600160a01b0316836001600160a01b03167f1b13dc64671b1e5cf76efe4493bf5ded8299383f3da8205d39f9eb9891c598e586604051620005b0919062000b7a565b60405180910390a350509392505050565b6040516301ffc9a760e01b815263545891bf60e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156200060d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000633919062000a3c565b1515600114620006865760405162461bcd60e51b815260206004820152601e60248201527f494465736f6320696e74657266616365206e6f7420737570706f72746564000060448201526064016200021f565b6001546001600160a01b03166200069c62000852565b6001600160a01b031614620006e35760405162461bcd60e51b815260206004820152600c60248201526b155b905d5d1a1bdc9a5e995960a21b60448201526064016200021f565b6001600160a01b038116600081815260036020526040808220805460ff19166001179055517f6a6455914f452787eb3985452aceedc1000fb545e394eb3b370e3d08958e0a5b9190a250565b6001546001600160a01b03166200074562000852565b6001600160a01b0316146200076e5760405162461bcd60e51b81526004016200021f9062000a05565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586200039262000852565b6001546001600160a01b0316620007c262000852565b6001600160a01b031614620008095760405162461bcd60e51b815260206004820152600c60248201526b155b905d5d1a1bdc9a5e995960a21b60448201526064016200021f565b6001600160a01b038116600081815260036020526040808220805460ff19169055517f0447b747642c4670e25ad3282fd36423e06b0c46fb64bddad47ad787867802629190a250565b6000601436108015906200087057506000546001600160a01b031633145b1562000883575060131936013560601c90565b503390565b61293a8062000b9083390190565b600060208284031215620008a957600080fd5b81356001600160a01b0381168114620008c157600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620008f057600080fd5b813567ffffffffffffffff808211156200090e576200090e620008c8565b604051601f8301601f19908116603f01168101908282118183101715620009395762000939620008c8565b816040528381528660208588010111156200095357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156200098957600080fd5b833567ffffffffffffffff80821115620009a257600080fd5b620009b087838801620008de565b94506020860135915080821115620009c757600080fd5b620009d587838801620008de565b93506040860135915080821115620009ec57600080fd5b50620009fb86828701620008de565b9150509250925092565b60208082526018908201527f756e617574686f72697a65643a206f6e6c79206f776e65720000000000000000604082015260600190565b60006020828403121562000a4f57600080fd5b81518015158114620008c157600080fd5b60005b8381101562000a7d57818101518382015260200162000a63565b50506000910152565b6000815180845262000aa081602086016020860162000a60565b601f01601f19169290920160200192915050565b60a08152600062000ac960a083018862000a86565b828103602084015262000add818862000a86565b9050828103604084015262000af3818762000a86565b6001600160a01b0395861660608501529390941660809092019190915250949350505050565b6000835162000b2d81846020880162000a60565b83519083019062000b4381836020880162000a60565b01949350505050565b6001600160a01b038316815260406020820181905260009062000b729083018462000a86565b949350505050565b602081526000620008c1602083018462000a8656fe60806040523480156200001157600080fd5b506040516200293a3803806200293a8339810160408190526200003491620001e5565b84846200004133620000b3565b60016200004f83826200032b565b5060026200005e82826200032b565b5050600a80546001600160a01b0319163317905550600c6200008184826200032b565b50600b80546001600160a01b0319166001600160a01b038316179055620000a882620000b3565b5050505050620003f7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200012b57600080fd5b81516001600160401b038082111562000148576200014862000103565b604051601f8301601f19908116603f0116810190828211818310171562000173576200017362000103565b816040528381526020925086838588010111156200019057600080fd5b600091505b83821015620001b4578582018301518183018401529082019062000195565b600093810190920192909252949350505050565b80516001600160a01b0381168114620001e057600080fd5b919050565b600080600080600060a08688031215620001fe57600080fd5b85516001600160401b03808211156200021657600080fd5b6200022489838a0162000119565b965060208801519150808211156200023b57600080fd5b6200024989838a0162000119565b955060408801519150808211156200026057600080fd5b506200026f8882890162000119565b9350506200028060608701620001c8565b91506200029060808701620001c8565b90509295509295909350565b600181811c90821680620002b157607f821691505b602082108103620002d257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200032657600081815260208120601f850160051c81016020861015620003015750805b601f850160051c820191505b8181101562000322578281556001016200030d565b5050505b505050565b81516001600160401b0381111562000347576200034762000103565b6200035f816200035884546200029c565b84620002d8565b602080601f8311600181146200039757600084156200037e5750858301515b600019600386901b1c1916600185901b17855562000322565b600085815260208120601f198616915b82811015620003c857888601518255948401946001909101908401620003a7565b5085821015620003e75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61253380620004076000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806383b74baa1161011a578063c87b56dd116100ad578063e985e9c51161007c578063e985e9c51461045a578063f004407114610496578063f15df2e5146104b6578063f2fde38b146104bf578063fdcff274146104d257600080fd5b8063c87b56dd1461042e578063dd7d82c914610441578063e2079d6a14610449578063e8a3d4851461045257600080fd5b80639bd4158f116100e95780639bd4158f146103e2578063a22cb465146103f5578063ae387ee514610408578063b88d4fde1461041b57600080fd5b806383b74baa146103a35780638da5cb5b146103b6578063938e3d7b146103c757806395d89b41146103da57600080fd5b806323b872dd1161019d57806342966c681161016c57806342966c6814610334578063443fdd94146103475780636352211e1461037557806370a0823114610388578063715018a61461039b57600080fd5b806323b872dd146102e85780632b148f18146102fb57806340c10f191461030e57806342842e0e1461032157600080fd5b8063095ea7b3116101d9578063095ea7b31461029657806318160ddd146102ab5780631c02a97c146102c257806320c5429b146102d557600080fd5b806301daf26b1461020b57806301ffc9a71461024357806306fdde0314610256578063081812fc1461026b575b600080fd5b61022e610219366004611b83565b600d6020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61022e610251366004611bb2565b6104e5565b61025e610510565b60405161023a9190611c1c565b61027e610279366004611b83565b6105a2565b6040516001600160a01b03909116815260200161023a565b6102a96102a4366004611c4b565b6105c9565b005b6102b460095481565b60405190815260200161023a565b6102a96102d0366004611ce0565b6106e3565b6102a96102e3366004611b83565b610773565b6102a96102f6366004611d76565b6107a5565b6102a9610309366004611e0a565b6107d6565b6102a961031c366004611c4b565b61090a565b6102a961032f366004611d76565b610a93565b6102a9610342366004611b83565b610aae565b61022e610355366004611e65565b601060209081526000928352604080842090915290825290205460ff1681565b61027e610383366004611b83565b610bda565b6102b4610396366004611e91565b610c3a565b6102a9610cc0565b6102a96103b1366004611eac565b610cd4565b6000546001600160a01b031661027e565b6102a96103d5366004611f93565b610d31565b61025e610d97565b6102a96103f0366004611fe5565b610da6565b6102a9610403366004612039565b610f60565b61025e610416366004611b83565b610f6b565b6102a9610429366004612063565b611005565b61025e61043c366004611b83565b611037565b6102a96110e6565b6102b460085481565b61025e61114e565b61022e6104683660046120df565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6102b46104a4366004611b83565b600f6020526000908152604090205481565b6102b460075481565b6102a96104cd366004611e91565b61115d565b6102a96104e0366004611b83565b611236565b60006001600160e01b0319821663545891bf60e01b148061050a575061050a826112c8565b92915050565b60606001805461051f90612109565b80601f016020809104026020016040519081016040528092919081815260200182805461054b90612109565b80156105985780601f1061056d57610100808354040283529160200191610598565b820191906000526020600020905b81548152906001019060200180831161057b57829003601f168201915b5050505050905090565b60006105ad82611318565b506000908152600560205260409020546001600160a01b031690565b60006105d482610bda565b9050806001600160a01b0316836001600160a01b0316036106465760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061066257506106628133610468565b6106d45760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161063d565b6106de8383611377565b505050565b6000546001600160a01b03163314806107305750610730335b60085460008181526010602090815260408083206001600160a01b038616845290915290205460ff16151560011492915050565b61073957600080fd5b60005b815181101561076f5761076782828151811061075a5761075a612143565b6020026020010151610773565b60010161073c565b5050565b6000546001600160a01b03163314806107905750610790336106fc565b61079957600080fd5b6107a2816113e5565b50565b6107af33826113fb565b6107cb5760405162461bcd60e51b815260040161063d90612159565b6106de83838361147a565b6000546001600160a01b03163314806107f357506107f3336106fc565b6107fc57600080fd5b6000828152600d602052604090205460ff1661084c5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964205342207479706560881b604482015260640161063d565b60008151116108895760405162461bcd60e51b8152602060048201526009602482015268656d7074792075726960b81b604482015260640161063d565b6000828152600e602052604090206108a182826121ec565b50600b546040516318f002a560e01b81526001600160a01b03909116906318f002a5906108d490859085906004016122ac565b600060405180830381600087803b1580156108ee57600080fd5b505af1158015610902573d6000803e3d6000fd5b505050505050565b6000546001600160a01b03163314806109275750610927336106fc565b61093057600080fd5b6000818152600d602052604090205460ff166109805760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964205342207479706560881b604482015260640161063d565b60008181526010602090815260408083206001600160a01b038616845290915290205460ff1615156001036109ee5760405162461bcd60e51b8152602060048201526014602482015273111d5c1b1a58d85d194818dc9959195b9d1a585b60621b604482015260640161063d565b600980549060006109fe836122c5565b9190505550610a0f826009546115e9565b600980546000908152600f60209081526040808320859055848352601082528083206001600160a01b038781168086529190935292819020805460ff19166001179055600b549354905163128d663760e11b81526004810186905260248101919091526044810192909252336064830152919091169063251acc6e906084016108d4565b6106de83838360405180602001604052806000815250611005565b6000610ab982610bda565b90506001600160a01b0381163314610b1f5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920746865206f776e65722063616e206275726e20746865697220746f60448201526235b2b760e91b606482015260840161063d565b610b2882611603565b6000828152600f602081815260408084208054808652601084528286206001600160a01b03888116808952918652848820805460ff1916905589885295909452949055600b54905163038725f760e31b81526004810187905260248101859052604481019290925233606483015290911690631c392fb890608401600060405180830381600087803b158015610bbd57600080fd5b505af1158015610bd1573d6000803e3d6000fd5b50505050505050565b6000818152600360205260408120546001600160a01b03168061050a5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161063d565b60006001600160a01b038216610ca45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161063d565b506001600160a01b031660009081526004602052604090205490565b610cc86116a4565b610cd260006116fe565b565b6000546001600160a01b0316331480610cf15750610cf1336106fc565b610cfa57600080fd5b60005b82518110156106de57610d29838281518110610d1b57610d1b612143565b60200260200101518361090a565b600101610cfd565b6000546001600160a01b0316331480610d4e5750610d4e336106fc565b610d5757600080fd5b600c610d648284836122ec565b50600b54604051636b1ae3ff60e01b81526001600160a01b0390911690636b1ae3ff906108d490859085906004016123d5565b60606002805461051f90612109565b6000546001600160a01b0316331480610dc35750610dc3336106fc565b610dcc57600080fd5b81610e125760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206174746573746174696f6e55524960501b604482015260640161063d565b60078054906000610e22836122c5565b9091555050600754604080513060208201529081019190915260009060600160408051601f1981840301815291815281516020928301206000818152600d8452828120805460ff19166001179055600e9093529120909150610e858486836122ec565b50600b546040516318f002a560e01b81526001600160a01b03909116906318f002a590610eba908490889088906004016123e9565b600060405180830381600087803b158015610ed457600080fd5b505af1158015610ee8573d6000803e3d6000fd5b50505050811515600103610f5a576008819055600b546040516370d894cd60e01b8152600481018390526001600160a01b03909116906370d894cd90602401600060405180830381600087803b158015610f4157600080fd5b505af1158015610f55573d6000803e3d6000fd5b505050505b50505050565b61076f33838361174e565b600e6020526000908152604090208054610f8490612109565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb090612109565b8015610ffd5780601f10610fd257610100808354040283529160200191610ffd565b820191906000526020600020905b815481529060010190602001808311610fe057829003601f168201915b505050505081565b61100f33836113fb565b61102b5760405162461bcd60e51b815260040161063d90612159565b610f5a8484848461181c565b6000818152600f60209081526040808320548352600e909152902080546060919061106190612109565b80601f016020809104026020016040519081016040528092919081815260200182805461108d90612109565b80156110da5780601f106110af576101008083540402835291602001916110da565b820191906000526020600020905b8154815290600101906020018083116110bd57829003601f168201915b50505050509050919050565b6110ee6116a4565b60006008819055600b546040516370d894cd60e01b815260048101929092526001600160a01b0316906370d894cd90602401600060405180830381600087803b15801561113a57600080fd5b505af1158015610f5a573d6000803e3d6000fd5b6060600c805461051f90612109565b6111656116a4565b6001600160a01b0381166111ca5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161063d565b6111d3816116fe565b600b5460405163e2f273bd60e01b81526001600160a01b0383811660048301529091169063e2f273bd906024015b600060405180830381600087803b15801561121b57600080fd5b505af115801561122f573d6000803e3d6000fd5b5050505050565b61123e6116a4565b6000818152600d602052604090205460ff166112925760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b21030ba3a32b9ba30ba34b7b760691b604482015260640161063d565b6008819055600b546040516370d894cd60e01b8152600481018390526001600160a01b03909116906370d894cd90602401611201565b60006001600160e01b031982166380ac58cd60e01b14806112f957506001600160e01b03198216635b5e139f60e01b145b8061050a57506301ffc9a760e01b6001600160e01b031983161461050a565b6000818152600360205260409020546001600160a01b03166107a25760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161063d565b600081815260056020526040902080546001600160a01b0319166001600160a01b03841690811790915581906113ac82610bda565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006113f082610bda565b9050610b2882611603565b60008061140783610bda565b9050806001600160a01b0316846001600160a01b0316148061144e57506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b806114725750836001600160a01b0316611467846105a2565b6001600160a01b0316145b949350505050565b826001600160a01b031661148d82610bda565b6001600160a01b0316146114b35760405162461bcd60e51b815260040161063d9061240c565b6001600160a01b0382166115155760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161063d565b61152083838361184f565b826001600160a01b031661153382610bda565b6001600160a01b0316146115595760405162461bcd60e51b815260040161063d9061240c565b600081815260056020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260048552838620805460001901905590871680865283862080546001019055868652600390945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61076f8282604051806020016040528060008152506118b8565b600061160e82610bda565b905061161c8160008461184f565b61162582610bda565b600083815260056020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526004845282852080546000190190558785526003909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000546001600160a01b03163314610cd25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161063d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b0316036117af5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161063d565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61182784848461147a565b611833848484846118eb565b610f5a5760405162461bcd60e51b815260040161063d90612451565b6001600160a01b038216158061186c57506001600160a01b038316155b6106de5760405162461bcd60e51b815260206004820152601d60248201527f5468697320746f6b656e2063616e206f6e6c79206265206275726e6564000000604482015260640161063d565b6118c283836119ec565b6118cf60008484846118eb565b6106de5760405162461bcd60e51b815260040161063d90612451565b60006001600160a01b0384163b156119e157604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061192f9033908990889088906004016124a3565b6020604051808303816000875af192505050801561196a575060408051601f3d908101601f19168201909252611967918101906124e0565b60015b6119c7573d808015611998576040519150601f19603f3d011682016040523d82523d6000602084013e61199d565b606091505b5080516000036119bf5760405162461bcd60e51b815260040161063d90612451565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611472565b506001949350505050565b6001600160a01b038216611a425760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161063d565b6000818152600360205260409020546001600160a01b031615611aa75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161063d565b611ab36000838361184f565b6000818152600360205260409020546001600160a01b031615611b185760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161063d565b6001600160a01b038216600081815260046020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060208284031215611b9557600080fd5b5035919050565b6001600160e01b0319811681146107a257600080fd5b600060208284031215611bc457600080fd5b8135611bcf81611b9c565b9392505050565b6000815180845260005b81811015611bfc57602081850181015186830182015201611be0565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611bcf6020830184611bd6565b80356001600160a01b0381168114611c4657600080fd5b919050565b60008060408385031215611c5e57600080fd5b611c6783611c2f565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611cb457611cb4611c75565b604052919050565b600067ffffffffffffffff821115611cd657611cd6611c75565b5060051b60200190565b60006020808385031215611cf357600080fd5b823567ffffffffffffffff811115611d0a57600080fd5b8301601f81018513611d1b57600080fd5b8035611d2e611d2982611cbc565b611c8b565b81815260059190911b82018301908381019087831115611d4d57600080fd5b928401925b82841015611d6b57833582529284019290840190611d52565b979650505050505050565b600080600060608486031215611d8b57600080fd5b611d9484611c2f565b9250611da260208501611c2f565b9150604084013590509250925092565b600067ffffffffffffffff831115611dcc57611dcc611c75565b611ddf601f8401601f1916602001611c8b565b9050828152838383011115611df357600080fd5b828260208301376000602084830101529392505050565b60008060408385031215611e1d57600080fd5b82359150602083013567ffffffffffffffff811115611e3b57600080fd5b8301601f81018513611e4c57600080fd5b611e5b85823560208401611db2565b9150509250929050565b60008060408385031215611e7857600080fd5b82359150611e8860208401611c2f565b90509250929050565b600060208284031215611ea357600080fd5b611bcf82611c2f565b60008060408385031215611ebf57600080fd5b823567ffffffffffffffff811115611ed657600080fd5b8301601f81018513611ee757600080fd5b80356020611ef7611d2983611cbc565b82815260059290921b83018101918181019088841115611f1657600080fd5b938201935b83851015611f3b57611f2c85611c2f565b82529382019390820190611f1b565b98969091013596505050505050565b60008083601f840112611f5c57600080fd5b50813567ffffffffffffffff811115611f7457600080fd5b602083019150836020828501011115611f8c57600080fd5b9250929050565b60008060208385031215611fa657600080fd5b823567ffffffffffffffff811115611fbd57600080fd5b611fc985828601611f4a565b90969095509350505050565b80358015158114611c4657600080fd5b600080600060408486031215611ffa57600080fd5b833567ffffffffffffffff81111561201157600080fd5b61201d86828701611f4a565b9094509250612030905060208501611fd5565b90509250925092565b6000806040838503121561204c57600080fd5b61205583611c2f565b9150611e8860208401611fd5565b6000806000806080858703121561207957600080fd5b61208285611c2f565b935061209060208601611c2f565b925060408501359150606085013567ffffffffffffffff8111156120b357600080fd5b8501601f810187136120c457600080fd5b6120d387823560208401611db2565b91505092959194509250565b600080604083850312156120f257600080fd5b6120fb83611c2f565b9150611e8860208401611c2f565b600181811c9082168061211d57607f821691505b60208210810361213d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b601f8211156106de57600081815260208120601f850160051c810160208610156121cd5750805b601f850160051c820191505b81811015610902578281556001016121d9565b815167ffffffffffffffff81111561220657612206611c75565b61221a816122148454612109565b846121a6565b602080601f83116001811461224f57600084156122375750858301515b600019600386901b1c1916600185901b178555610902565b600085815260208120601f198616915b8281101561227e5788860151825594840194600190910190840161225f565b508582101561229c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006114726040830184611bd6565b6000600182016122e557634e487b7160e01b600052601160045260246000fd5b5060010190565b67ffffffffffffffff83111561230457612304611c75565b612318836123128354612109565b836121a6565b6000601f84116001811461234c57600085156123345750838201355b600019600387901b1c1916600186901b17835561122f565b600083815260209020601f19861690835b8281101561237d578685013582556020948501946001909201910161235d565b508682101561239a5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260006114726020830184866123ac565b8381526040602082015260006124036040830184866123ac565b95945050505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906124d690830184611bd6565b9695505050505050565b6000602082840312156124f257600080fd5b8151611bcf81611b9c56fea2646970667358221220423a89e24e3168039bf1b780725e289ba6cd13875e7c167c0f05a1fd7fe07efe64736f6c63430008110033a2646970667358221220c0c362c29e188c487c0bf7a36047f49e3a4222917affe85865cf8b813043dfd564736f6c63430008110033",
    "sourceMap": "626:3888:45:-:0;;;1235:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1284:12;:10;:12::i;:::-;1276:5;:20;;-1:-1:-1;;;;;;1276:20:45;-1:-1:-1;;;;;1276:20:45;;;;;;-1:-1:-1;1306:15:45;;-1:-1:-1;;;;;;1212:30:1;;;;;;;;;;1235:134:45;626:3888;;1481:547:1;1543:11;1589:2;1570:8;:21;;;;:55;;-1:-1:-1;1377:4:1;1413:17;-1:-1:-1;;;;;1413:17:1;1614:10;1400:30;1595;1566:456;;;-1:-1:-1;;;1931:14:1;1927:22;1914:36;1911:2;1907:44;1481:547;:::o;1566:456::-;-1:-1:-1;2001:10:1;1481:547;:::o;14:290:54:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:54;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:54:o;:::-;626:3888:45;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000b75760003560e01c80635c975abb116200007a5780635c975abb146200016f57806363a9c3d714620001825780638456cb5914620001995780638da5cb5b14620001a3578063ce1b815f14620001b7578063dcbf6b1414620001c957600080fd5b80630db065f414620000bc5780631166b54b14620000f75780633f4ba83a1462000110578063457902d2146200011a578063572b6c05146200014a575b600080fd5b620000e2620000cd36600462000896565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6200010e6200010836600462000896565b620001e0565b005b6200010e6200031b565b620001316200012b36600462000973565b620003af565b6040516001600160a01b039091168152602001620000ee565b620000e26200015b36600462000896565b6000546001600160a01b0391821691161490565b600054600160a01b900460ff16620000e2565b6200010e6200019336600462000896565b620005c1565b6200010e6200072f565b60015462000131906001600160a01b031681565b6000546001600160a01b031662000131565b6200010e620001da36600462000896565b620007ac565b6001546001600160a01b0316620001f662000852565b6001600160a01b031614620002285760405162461bcd60e51b81526004016200021f9062000a05565b60405180910390fd5b6040516301ffc9a760e01b8152637c026df360e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801562000274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029a919062000a3c565b1515600114620002f95760405162461bcd60e51b815260206004820152602360248201527f494d657461486f6c64657220696e74657266616365206e6f7420737570706f726044820152621d195960ea1b60648201526084016200021f565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03166200033162000852565b6001600160a01b0316146200035a5760405162461bcd60e51b81526004016200021f9062000a05565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6200039262000852565b6040516001600160a01b03909116815260200160405180910390a1565b6001546000906001600160a01b0316331480620003d65750600054600160a01b900460ff16155b6200040e5760405162461bcd60e51b81526020600482015260076024820152665061757365642160c81b60448201526064016200021f565b600060405180602001620004229062000888565b601f1982820381018352601f909101166040528585856200044262000852565b6002546040516200046495949392916001600160a01b03169060200162000ab4565b60408051601f198184030181529082905262000484929160200162000b19565b60405160208183030381529060405290506000620004a162000852565b604051602001620004ca919060609190911b6bffffffffffffffffffffffff1916815260140190565b604051602081830303815290604052805190602001209050808251602084016000f59250823b620004fa57600080fd5b60025460405163a326424f60e01b81526001600160a01b039091169063a326424f906200052e908690889060040162000b4c565b600060405180830381600087803b1580156200054957600080fd5b505af11580156200055e573d6000803e3d6000fd5b505050506200056c62000852565b6001600160a01b0316836001600160a01b03167f1b13dc64671b1e5cf76efe4493bf5ded8299383f3da8205d39f9eb9891c598e586604051620005b0919062000b7a565b60405180910390a350509392505050565b6040516301ffc9a760e01b815263545891bf60e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156200060d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000633919062000a3c565b1515600114620006865760405162461bcd60e51b815260206004820152601e60248201527f494465736f6320696e74657266616365206e6f7420737570706f72746564000060448201526064016200021f565b6001546001600160a01b03166200069c62000852565b6001600160a01b031614620006e35760405162461bcd60e51b815260206004820152600c60248201526b155b905d5d1a1bdc9a5e995960a21b60448201526064016200021f565b6001600160a01b038116600081815260036020526040808220805460ff19166001179055517f6a6455914f452787eb3985452aceedc1000fb545e394eb3b370e3d08958e0a5b9190a250565b6001546001600160a01b03166200074562000852565b6001600160a01b0316146200076e5760405162461bcd60e51b81526004016200021f9062000a05565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586200039262000852565b6001546001600160a01b0316620007c262000852565b6001600160a01b031614620008095760405162461bcd60e51b815260206004820152600c60248201526b155b905d5d1a1bdc9a5e995960a21b60448201526064016200021f565b6001600160a01b038116600081815260036020526040808220805460ff19169055517f0447b747642c4670e25ad3282fd36423e06b0c46fb64bddad47ad787867802629190a250565b6000601436108015906200087057506000546001600160a01b031633145b1562000883575060131936013560601c90565b503390565b61293a8062000b9083390190565b600060208284031215620008a957600080fd5b81356001600160a01b0381168114620008c157600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620008f057600080fd5b813567ffffffffffffffff808211156200090e576200090e620008c8565b604051601f8301601f19908116603f01168101908282118183101715620009395762000939620008c8565b816040528381528660208588010111156200095357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156200098957600080fd5b833567ffffffffffffffff80821115620009a257600080fd5b620009b087838801620008de565b94506020860135915080821115620009c757600080fd5b620009d587838801620008de565b93506040860135915080821115620009ec57600080fd5b50620009fb86828701620008de565b9150509250925092565b60208082526018908201527f756e617574686f72697a65643a206f6e6c79206f776e65720000000000000000604082015260600190565b60006020828403121562000a4f57600080fd5b81518015158114620008c157600080fd5b60005b8381101562000a7d57818101518382015260200162000a63565b50506000910152565b6000815180845262000aa081602086016020860162000a60565b601f01601f19169290920160200192915050565b60a08152600062000ac960a083018862000a86565b828103602084015262000add818862000a86565b9050828103604084015262000af3818762000a86565b6001600160a01b0395861660608501529390941660809092019190915250949350505050565b6000835162000b2d81846020880162000a60565b83519083019062000b4381836020880162000a60565b01949350505050565b6001600160a01b038316815260406020820181905260009062000b729083018462000a86565b949350505050565b602081526000620008c1602083018462000a8656fe60806040523480156200001157600080fd5b506040516200293a3803806200293a8339810160408190526200003491620001e5565b84846200004133620000b3565b60016200004f83826200032b565b5060026200005e82826200032b565b5050600a80546001600160a01b0319163317905550600c6200008184826200032b565b50600b80546001600160a01b0319166001600160a01b038316179055620000a882620000b3565b5050505050620003f7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200012b57600080fd5b81516001600160401b038082111562000148576200014862000103565b604051601f8301601f19908116603f0116810190828211818310171562000173576200017362000103565b816040528381526020925086838588010111156200019057600080fd5b600091505b83821015620001b4578582018301518183018401529082019062000195565b600093810190920192909252949350505050565b80516001600160a01b0381168114620001e057600080fd5b919050565b600080600080600060a08688031215620001fe57600080fd5b85516001600160401b03808211156200021657600080fd5b6200022489838a0162000119565b965060208801519150808211156200023b57600080fd5b6200024989838a0162000119565b955060408801519150808211156200026057600080fd5b506200026f8882890162000119565b9350506200028060608701620001c8565b91506200029060808701620001c8565b90509295509295909350565b600181811c90821680620002b157607f821691505b602082108103620002d257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200032657600081815260208120601f850160051c81016020861015620003015750805b601f850160051c820191505b8181101562000322578281556001016200030d565b5050505b505050565b81516001600160401b0381111562000347576200034762000103565b6200035f816200035884546200029c565b84620002d8565b602080601f8311600181146200039757600084156200037e5750858301515b600019600386901b1c1916600185901b17855562000322565b600085815260208120601f198616915b82811015620003c857888601518255948401946001909101908401620003a7565b5085821015620003e75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61253380620004076000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806383b74baa1161011a578063c87b56dd116100ad578063e985e9c51161007c578063e985e9c51461045a578063f004407114610496578063f15df2e5146104b6578063f2fde38b146104bf578063fdcff274146104d257600080fd5b8063c87b56dd1461042e578063dd7d82c914610441578063e2079d6a14610449578063e8a3d4851461045257600080fd5b80639bd4158f116100e95780639bd4158f146103e2578063a22cb465146103f5578063ae387ee514610408578063b88d4fde1461041b57600080fd5b806383b74baa146103a35780638da5cb5b146103b6578063938e3d7b146103c757806395d89b41146103da57600080fd5b806323b872dd1161019d57806342966c681161016c57806342966c6814610334578063443fdd94146103475780636352211e1461037557806370a0823114610388578063715018a61461039b57600080fd5b806323b872dd146102e85780632b148f18146102fb57806340c10f191461030e57806342842e0e1461032157600080fd5b8063095ea7b3116101d9578063095ea7b31461029657806318160ddd146102ab5780631c02a97c146102c257806320c5429b146102d557600080fd5b806301daf26b1461020b57806301ffc9a71461024357806306fdde0314610256578063081812fc1461026b575b600080fd5b61022e610219366004611b83565b600d6020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61022e610251366004611bb2565b6104e5565b61025e610510565b60405161023a9190611c1c565b61027e610279366004611b83565b6105a2565b6040516001600160a01b03909116815260200161023a565b6102a96102a4366004611c4b565b6105c9565b005b6102b460095481565b60405190815260200161023a565b6102a96102d0366004611ce0565b6106e3565b6102a96102e3366004611b83565b610773565b6102a96102f6366004611d76565b6107a5565b6102a9610309366004611e0a565b6107d6565b6102a961031c366004611c4b565b61090a565b6102a961032f366004611d76565b610a93565b6102a9610342366004611b83565b610aae565b61022e610355366004611e65565b601060209081526000928352604080842090915290825290205460ff1681565b61027e610383366004611b83565b610bda565b6102b4610396366004611e91565b610c3a565b6102a9610cc0565b6102a96103b1366004611eac565b610cd4565b6000546001600160a01b031661027e565b6102a96103d5366004611f93565b610d31565b61025e610d97565b6102a96103f0366004611fe5565b610da6565b6102a9610403366004612039565b610f60565b61025e610416366004611b83565b610f6b565b6102a9610429366004612063565b611005565b61025e61043c366004611b83565b611037565b6102a96110e6565b6102b460085481565b61025e61114e565b61022e6104683660046120df565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6102b46104a4366004611b83565b600f6020526000908152604090205481565b6102b460075481565b6102a96104cd366004611e91565b61115d565b6102a96104e0366004611b83565b611236565b60006001600160e01b0319821663545891bf60e01b148061050a575061050a826112c8565b92915050565b60606001805461051f90612109565b80601f016020809104026020016040519081016040528092919081815260200182805461054b90612109565b80156105985780601f1061056d57610100808354040283529160200191610598565b820191906000526020600020905b81548152906001019060200180831161057b57829003601f168201915b5050505050905090565b60006105ad82611318565b506000908152600560205260409020546001600160a01b031690565b60006105d482610bda565b9050806001600160a01b0316836001600160a01b0316036106465760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061066257506106628133610468565b6106d45760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161063d565b6106de8383611377565b505050565b6000546001600160a01b03163314806107305750610730335b60085460008181526010602090815260408083206001600160a01b038616845290915290205460ff16151560011492915050565b61073957600080fd5b60005b815181101561076f5761076782828151811061075a5761075a612143565b6020026020010151610773565b60010161073c565b5050565b6000546001600160a01b03163314806107905750610790336106fc565b61079957600080fd5b6107a2816113e5565b50565b6107af33826113fb565b6107cb5760405162461bcd60e51b815260040161063d90612159565b6106de83838361147a565b6000546001600160a01b03163314806107f357506107f3336106fc565b6107fc57600080fd5b6000828152600d602052604090205460ff1661084c5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964205342207479706560881b604482015260640161063d565b60008151116108895760405162461bcd60e51b8152602060048201526009602482015268656d7074792075726960b81b604482015260640161063d565b6000828152600e602052604090206108a182826121ec565b50600b546040516318f002a560e01b81526001600160a01b03909116906318f002a5906108d490859085906004016122ac565b600060405180830381600087803b1580156108ee57600080fd5b505af1158015610902573d6000803e3d6000fd5b505050505050565b6000546001600160a01b03163314806109275750610927336106fc565b61093057600080fd5b6000818152600d602052604090205460ff166109805760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964205342207479706560881b604482015260640161063d565b60008181526010602090815260408083206001600160a01b038616845290915290205460ff1615156001036109ee5760405162461bcd60e51b8152602060048201526014602482015273111d5c1b1a58d85d194818dc9959195b9d1a585b60621b604482015260640161063d565b600980549060006109fe836122c5565b9190505550610a0f826009546115e9565b600980546000908152600f60209081526040808320859055848352601082528083206001600160a01b038781168086529190935292819020805460ff19166001179055600b549354905163128d663760e11b81526004810186905260248101919091526044810192909252336064830152919091169063251acc6e906084016108d4565b6106de83838360405180602001604052806000815250611005565b6000610ab982610bda565b90506001600160a01b0381163314610b1f5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920746865206f776e65722063616e206275726e20746865697220746f60448201526235b2b760e91b606482015260840161063d565b610b2882611603565b6000828152600f602081815260408084208054808652601084528286206001600160a01b03888116808952918652848820805460ff1916905589885295909452949055600b54905163038725f760e31b81526004810187905260248101859052604481019290925233606483015290911690631c392fb890608401600060405180830381600087803b158015610bbd57600080fd5b505af1158015610bd1573d6000803e3d6000fd5b50505050505050565b6000818152600360205260408120546001600160a01b03168061050a5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161063d565b60006001600160a01b038216610ca45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161063d565b506001600160a01b031660009081526004602052604090205490565b610cc86116a4565b610cd260006116fe565b565b6000546001600160a01b0316331480610cf15750610cf1336106fc565b610cfa57600080fd5b60005b82518110156106de57610d29838281518110610d1b57610d1b612143565b60200260200101518361090a565b600101610cfd565b6000546001600160a01b0316331480610d4e5750610d4e336106fc565b610d5757600080fd5b600c610d648284836122ec565b50600b54604051636b1ae3ff60e01b81526001600160a01b0390911690636b1ae3ff906108d490859085906004016123d5565b60606002805461051f90612109565b6000546001600160a01b0316331480610dc35750610dc3336106fc565b610dcc57600080fd5b81610e125760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206174746573746174696f6e55524960501b604482015260640161063d565b60078054906000610e22836122c5565b9091555050600754604080513060208201529081019190915260009060600160408051601f1981840301815291815281516020928301206000818152600d8452828120805460ff19166001179055600e9093529120909150610e858486836122ec565b50600b546040516318f002a560e01b81526001600160a01b03909116906318f002a590610eba908490889088906004016123e9565b600060405180830381600087803b158015610ed457600080fd5b505af1158015610ee8573d6000803e3d6000fd5b50505050811515600103610f5a576008819055600b546040516370d894cd60e01b8152600481018390526001600160a01b03909116906370d894cd90602401600060405180830381600087803b158015610f4157600080fd5b505af1158015610f55573d6000803e3d6000fd5b505050505b50505050565b61076f33838361174e565b600e6020526000908152604090208054610f8490612109565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb090612109565b8015610ffd5780601f10610fd257610100808354040283529160200191610ffd565b820191906000526020600020905b815481529060010190602001808311610fe057829003601f168201915b505050505081565b61100f33836113fb565b61102b5760405162461bcd60e51b815260040161063d90612159565b610f5a8484848461181c565b6000818152600f60209081526040808320548352600e909152902080546060919061106190612109565b80601f016020809104026020016040519081016040528092919081815260200182805461108d90612109565b80156110da5780601f106110af576101008083540402835291602001916110da565b820191906000526020600020905b8154815290600101906020018083116110bd57829003601f168201915b50505050509050919050565b6110ee6116a4565b60006008819055600b546040516370d894cd60e01b815260048101929092526001600160a01b0316906370d894cd90602401600060405180830381600087803b15801561113a57600080fd5b505af1158015610f5a573d6000803e3d6000fd5b6060600c805461051f90612109565b6111656116a4565b6001600160a01b0381166111ca5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161063d565b6111d3816116fe565b600b5460405163e2f273bd60e01b81526001600160a01b0383811660048301529091169063e2f273bd906024015b600060405180830381600087803b15801561121b57600080fd5b505af115801561122f573d6000803e3d6000fd5b5050505050565b61123e6116a4565b6000818152600d602052604090205460ff166112925760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b21030ba3a32b9ba30ba34b7b760691b604482015260640161063d565b6008819055600b546040516370d894cd60e01b8152600481018390526001600160a01b03909116906370d894cd90602401611201565b60006001600160e01b031982166380ac58cd60e01b14806112f957506001600160e01b03198216635b5e139f60e01b145b8061050a57506301ffc9a760e01b6001600160e01b031983161461050a565b6000818152600360205260409020546001600160a01b03166107a25760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161063d565b600081815260056020526040902080546001600160a01b0319166001600160a01b03841690811790915581906113ac82610bda565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006113f082610bda565b9050610b2882611603565b60008061140783610bda565b9050806001600160a01b0316846001600160a01b0316148061144e57506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b806114725750836001600160a01b0316611467846105a2565b6001600160a01b0316145b949350505050565b826001600160a01b031661148d82610bda565b6001600160a01b0316146114b35760405162461bcd60e51b815260040161063d9061240c565b6001600160a01b0382166115155760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161063d565b61152083838361184f565b826001600160a01b031661153382610bda565b6001600160a01b0316146115595760405162461bcd60e51b815260040161063d9061240c565b600081815260056020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260048552838620805460001901905590871680865283862080546001019055868652600390945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61076f8282604051806020016040528060008152506118b8565b600061160e82610bda565b905061161c8160008461184f565b61162582610bda565b600083815260056020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526004845282852080546000190190558785526003909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000546001600160a01b03163314610cd25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161063d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b0316036117af5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161063d565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61182784848461147a565b611833848484846118eb565b610f5a5760405162461bcd60e51b815260040161063d90612451565b6001600160a01b038216158061186c57506001600160a01b038316155b6106de5760405162461bcd60e51b815260206004820152601d60248201527f5468697320746f6b656e2063616e206f6e6c79206265206275726e6564000000604482015260640161063d565b6118c283836119ec565b6118cf60008484846118eb565b6106de5760405162461bcd60e51b815260040161063d90612451565b60006001600160a01b0384163b156119e157604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061192f9033908990889088906004016124a3565b6020604051808303816000875af192505050801561196a575060408051601f3d908101601f19168201909252611967918101906124e0565b60015b6119c7573d808015611998576040519150601f19603f3d011682016040523d82523d6000602084013e61199d565b606091505b5080516000036119bf5760405162461bcd60e51b815260040161063d90612451565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611472565b506001949350505050565b6001600160a01b038216611a425760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161063d565b6000818152600360205260409020546001600160a01b031615611aa75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161063d565b611ab36000838361184f565b6000818152600360205260409020546001600160a01b031615611b185760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161063d565b6001600160a01b038216600081815260046020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060208284031215611b9557600080fd5b5035919050565b6001600160e01b0319811681146107a257600080fd5b600060208284031215611bc457600080fd5b8135611bcf81611b9c565b9392505050565b6000815180845260005b81811015611bfc57602081850181015186830182015201611be0565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611bcf6020830184611bd6565b80356001600160a01b0381168114611c4657600080fd5b919050565b60008060408385031215611c5e57600080fd5b611c6783611c2f565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611cb457611cb4611c75565b604052919050565b600067ffffffffffffffff821115611cd657611cd6611c75565b5060051b60200190565b60006020808385031215611cf357600080fd5b823567ffffffffffffffff811115611d0a57600080fd5b8301601f81018513611d1b57600080fd5b8035611d2e611d2982611cbc565b611c8b565b81815260059190911b82018301908381019087831115611d4d57600080fd5b928401925b82841015611d6b57833582529284019290840190611d52565b979650505050505050565b600080600060608486031215611d8b57600080fd5b611d9484611c2f565b9250611da260208501611c2f565b9150604084013590509250925092565b600067ffffffffffffffff831115611dcc57611dcc611c75565b611ddf601f8401601f1916602001611c8b565b9050828152838383011115611df357600080fd5b828260208301376000602084830101529392505050565b60008060408385031215611e1d57600080fd5b82359150602083013567ffffffffffffffff811115611e3b57600080fd5b8301601f81018513611e4c57600080fd5b611e5b85823560208401611db2565b9150509250929050565b60008060408385031215611e7857600080fd5b82359150611e8860208401611c2f565b90509250929050565b600060208284031215611ea357600080fd5b611bcf82611c2f565b60008060408385031215611ebf57600080fd5b823567ffffffffffffffff811115611ed657600080fd5b8301601f81018513611ee757600080fd5b80356020611ef7611d2983611cbc565b82815260059290921b83018101918181019088841115611f1657600080fd5b938201935b83851015611f3b57611f2c85611c2f565b82529382019390820190611f1b565b98969091013596505050505050565b60008083601f840112611f5c57600080fd5b50813567ffffffffffffffff811115611f7457600080fd5b602083019150836020828501011115611f8c57600080fd5b9250929050565b60008060208385031215611fa657600080fd5b823567ffffffffffffffff811115611fbd57600080fd5b611fc985828601611f4a565b90969095509350505050565b80358015158114611c4657600080fd5b600080600060408486031215611ffa57600080fd5b833567ffffffffffffffff81111561201157600080fd5b61201d86828701611f4a565b9094509250612030905060208501611fd5565b90509250925092565b6000806040838503121561204c57600080fd5b61205583611c2f565b9150611e8860208401611fd5565b6000806000806080858703121561207957600080fd5b61208285611c2f565b935061209060208601611c2f565b925060408501359150606085013567ffffffffffffffff8111156120b357600080fd5b8501601f810187136120c457600080fd5b6120d387823560208401611db2565b91505092959194509250565b600080604083850312156120f257600080fd5b6120fb83611c2f565b9150611e8860208401611c2f565b600181811c9082168061211d57607f821691505b60208210810361213d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b601f8211156106de57600081815260208120601f850160051c810160208610156121cd5750805b601f850160051c820191505b81811015610902578281556001016121d9565b815167ffffffffffffffff81111561220657612206611c75565b61221a816122148454612109565b846121a6565b602080601f83116001811461224f57600084156122375750858301515b600019600386901b1c1916600185901b178555610902565b600085815260208120601f198616915b8281101561227e5788860151825594840194600190910190840161225f565b508582101561229c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006114726040830184611bd6565b6000600182016122e557634e487b7160e01b600052601160045260246000fd5b5060010190565b67ffffffffffffffff83111561230457612304611c75565b612318836123128354612109565b836121a6565b6000601f84116001811461234c57600085156123345750838201355b600019600387901b1c1916600186901b17835561122f565b600083815260209020601f19861690835b8281101561237d578685013582556020948501946001909201910161235d565b508682101561239a5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260006114726020830184866123ac565b8381526040602082015260006124036040830184866123ac565b95945050505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906124d690830184611bd6565b9695505050505050565b6000602082840312156124f257600080fd5b8151611bcf81611b9c56fea2646970667358221220423a89e24e3168039bf1b780725e289ba6cd13875e7c167c0f05a1fd7fe07efe64736f6c63430008110033a2646970667358221220c0c362c29e188c487c0bf7a36047f49e3a4222917affe85865cf8b813043dfd564736f6c63430008110033",
    "sourceMap": "626:3888:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;470:14:54;;463:22;445:41;;433:2;418:18;764:40:45;;;;;;;;1712:414;;;;;;:::i;:::-;;:::i;:::-;;1541:165;;;:::i;2556:951::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2265:32:54;;;2247:51;;2235:2;2220:18;2556:951:45;2101:203:54;1293:144:1;;;;;;:::i;:::-;1377:4;1413:17;-1:-1:-1;;;;;1400:30:1;;;1413:17;;1400:30;;1293:144;4436:76:45;4475:4;4498:7;-1:-1:-1;;;4498:7:45;;;;4436:76;;3681:309;;;;;;:::i;:::-;;:::i;1375:160::-;;;:::i;695:20::-;;;;;-1:-1:-1;;;;;695:20:45;;;1018:119:1;1078:17;1113;-1:-1:-1;;;;;1113:17:1;1018:119;;4182:159:45;;;;;;:::i;:::-;;:::i;1712:414::-;1814:5;;-1:-1:-1;;;;;1814:5:45;1798:12;:10;:12::i;:::-;-1:-1:-1;;;;;1798:21:45;;1777:92;;;;-1:-1:-1;;;1777:92:45;;;;;;;:::i;:::-;;;;;;;;;1900:104;;-1:-1:-1;;;1900:104:45;;-1:-1:-1;;;1900:104:45;;;2806:52:54;-1:-1:-1;;;;;1900:43:45;;;;;2779:18:54;;1900:104:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:112;;2008:4;1900:112;1879:194;;;;-1:-1:-1;;;1879:194:45;;3353:2:54;1879:194:45;;;3335:21:54;3392:2;3372:18;;;3365:30;3431:34;3411:18;;;3404:62;-1:-1:-1;;;3482:18:54;;;3475:33;3525:19;;1879:194:45;3151:399:54;1879:194:45;2083:21;:36;;-1:-1:-1;;;;;;2083:36:45;-1:-1:-1;;;;;2083:36:45;;;;;;;;;;1712:414::o;1541:165::-;1603:5;;-1:-1:-1;;;;;1603:5:45;1587:12;:10;:12::i;:::-;-1:-1:-1;;;;;1587:21:45;;1579:58;;;;-1:-1:-1;;;1579:58:45;;;;;;;:::i;:::-;1657:5;1647:15;;-1:-1:-1;;;;1647:15:45;;;1677:22;1686:12;:10;:12::i;:::-;1677:22;;-1:-1:-1;;;;;2265:32:54;;;2247:51;;2235:2;2220:18;1677:22:45;;;;;;;1541:165::o;2556:951::-;2807:5;;2697:13;;-1:-1:-1;;;;;2807:5:45;2793:10;:19;;:32;;-1:-1:-1;4475:4:45;4498:7;-1:-1:-1;;;4498:7:45;;;;2816:9;2793:32;2785:52;;;;-1:-1:-1;;;2785:52:45;;3757:2:54;2785:52:45;;;3739:21:54;3796:1;3776:18;;;3769:29;-1:-1:-1;;;3814:18:54;;;3807:37;3861:18;;2785:52:45;3555:330:54;2785:52:45;2847:17;2897:24;;;;;;;;:::i;:::-;-1:-1:-1;;2897:24:45;;;;;;;;;;;;;;2963:5;2986:7;3011:12;3041;:10;:12::i;:::-;3071:21;;2935:171;;;;;;;;-1:-1:-1;;;;;3071:21:45;;2935:171;;;:::i;:::-;;;;-1:-1:-1;;2935:171:45;;;;;;;;;;2867:249;;;2935:171;2867:249;;:::i;:::-;;;;;;;;;;;;;2847:269;;3126:12;3168;:10;:12::i;:::-;3151:30;;;;;;;5819:2:54;5815:15;;;;-1:-1:-1;;5811:53:54;5799:66;;5890:2;5881:12;;5670:229;3151:30:45;;;;;;;;;;;;;3141:41;;;;;;3126:56;;3265:4;3258;3252:11;3245:4;3239;3235:15;3232:1;3224:46;3215:55;;3305:5;3293:18;3283:74;;3341:1;3338;3331:12;3283:74;3388:21;;3376:66;;-1:-1:-1;;;3376:66:45;;-1:-1:-1;;;;;3388:21:45;;;;3376:45;;:66;;3422:5;;3429:12;;3376:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3473:12;:10;:12::i;:::-;-1:-1:-1;;;;;3457:43:45;3466:5;-1:-1:-1;;;;;3457:43:45;;3487:12;3457:43;;;;;;:::i;:::-;;;;;;;;2712:795;;2556:951;;;;;:::o;3681:309::-;3750:55;;-1:-1:-1;;;3750:55:45;;-1:-1:-1;;;3750:55:45;;;2806:52:54;-1:-1:-1;;;;;3750:29:45;;;;;2779:18:54;;3750:55:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;3809:4;3750:63;3729:140;;;;-1:-1:-1;;;3729:140:45;;6653:2:54;3729:140:45;;;6635:21:54;6692:2;6672:18;;;6665:30;6731:32;6711:18;;;6704:60;6781:18;;3729:140:45;6451:354:54;3729:140:45;3903:5;;-1:-1:-1;;;;;3903:5:45;3887:12;:10;:12::i;:::-;-1:-1:-1;;;;;3887:21:45;;3879:46;;;;-1:-1:-1;;;3879:46:45;;7012:2:54;3879:46:45;;;6994:21:54;7051:2;7031:18;;;7024:30;-1:-1:-1;;;7070:18:54;;;7063:42;7122:18;;3879:46:45;6810:336:54;3879:46:45;-1:-1:-1;;;;;3935:13:45;;;;;;:8;:13;;;;;;:20;;-1:-1:-1;;3935:20:45;3951:4;3935:20;;;3970:13;;;3935;3970;3681:309;:::o;1375:160::-;1435:5;;-1:-1:-1;;;;;1435:5:45;1419:12;:10;:12::i;:::-;-1:-1:-1;;;;;1419:21:45;;1411:58;;;;-1:-1:-1;;;1411:58:45;;;;;;;:::i;:::-;1479:7;:14;;-1:-1:-1;;;;1479:14:45;-1:-1:-1;;;1479:14:45;;;1508:20;1515:12;:10;:12::i;4182:159::-;4254:5;;-1:-1:-1;;;;;4254:5:45;4238:12;:10;:12::i;:::-;-1:-1:-1;;;;;4238:21:45;;4230:46;;;;-1:-1:-1;;;4230:46:45;;7012:2:54;4230:46:45;;;6994:21:54;7051:2;7031:18;;;7024:30;-1:-1:-1;;;7070:18:54;;;7063:42;7122:18;;4230:46:45;6810:336:54;4230:46:45;-1:-1:-1;;;;;4286:13:45;;4302:5;4286:13;;;:8;:13;;;;;;:21;;-1:-1:-1;;4286:21:45;;;4322:12;;;4302:5;4322:12;4182:159;:::o;1481:547:1:-;1543:11;1589:2;1570:8;:21;;;;:55;;-1:-1:-1;1377:4:1;1413:17;-1:-1:-1;;;;;1413:17:1;1614:10;1400:30;1595;1566:456;;;-1:-1:-1;;;1931:14:1;1927:22;1914:36;1911:2;1907:44;1481:547;:::o;1566:456::-;-1:-1:-1;2001:10:1;1481:547;:::o;-1:-1:-1:-;;;;;;;;:::o;14:286:54:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:54;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:54:o;497:127::-;558:10;553:3;549:20;546:1;539:31;589:4;586:1;579:15;613:4;610:1;603:15;629:719;672:5;725:3;718:4;710:6;706:17;702:27;692:55;;743:1;740;733:12;692:55;779:6;766:20;805:18;842:2;838;835:10;832:36;;;848:18;;:::i;:::-;923:2;917:9;891:2;977:13;;-1:-1:-1;;973:22:54;;;997:2;969:31;965:40;953:53;;;1021:18;;;1041:22;;;1018:46;1015:72;;;1067:18;;:::i;:::-;1107:10;1103:2;1096:22;1142:2;1134:6;1127:18;1188:3;1181:4;1176:2;1168:6;1164:15;1160:26;1157:35;1154:55;;;1205:1;1202;1195:12;1154:55;1269:2;1262:4;1254:6;1250:17;1243:4;1235:6;1231:17;1218:54;1316:1;1309:4;1304:2;1296:6;1292:15;1288:26;1281:37;1336:6;1327:15;;;;;;629:719;;;;:::o;1353:743::-;1460:6;1468;1476;1529:2;1517:9;1508:7;1504:23;1500:32;1497:52;;;1545:1;1542;1535:12;1497:52;1585:9;1572:23;1614:18;1655:2;1647:6;1644:14;1641:34;;;1671:1;1668;1661:12;1641:34;1694:50;1736:7;1727:6;1716:9;1712:22;1694:50;:::i;:::-;1684:60;;1797:2;1786:9;1782:18;1769:32;1753:48;;1826:2;1816:8;1813:16;1810:36;;;1842:1;1839;1832:12;1810:36;1865:52;1909:7;1898:8;1887:9;1883:24;1865:52;:::i;:::-;1855:62;;1970:2;1959:9;1955:18;1942:32;1926:48;;1999:2;1989:8;1986:16;1983:36;;;2015:1;2012;2005:12;1983:36;;2038:52;2082:7;2071:8;2060:9;2056:24;2038:52;:::i;:::-;2028:62;;;1353:743;;;;;:::o;2309:348::-;2511:2;2493:21;;;2550:2;2530:18;;;2523:30;2589:26;2584:2;2569:18;;2562:54;2648:2;2633:18;;2309:348::o;2869:277::-;2936:6;2989:2;2977:9;2968:7;2964:23;2960:32;2957:52;;;3005:1;3002;2995:12;2957:52;3037:9;3031:16;3090:5;3083:13;3076:21;3069:5;3066:32;3056:60;;3112:1;3109;3102:12;3890:250;3975:1;3985:113;3999:6;3996:1;3993:13;3985:113;;;4075:11;;;4069:18;4056:11;;;4049:39;4021:2;4014:10;3985:113;;;-1:-1:-1;;4132:1:54;4114:16;;4107:27;3890:250::o;4145:271::-;4187:3;4225:5;4219:12;4252:6;4247:3;4240:19;4268:76;4337:6;4330:4;4325:3;4321:14;4314:4;4307:5;4303:16;4268:76;:::i;:::-;4398:2;4377:15;-1:-1:-1;;4373:29:54;4364:39;;;;4405:4;4360:50;;4145:271;-1:-1:-1;;4145:271:54:o;4421:747::-;4722:3;4711:9;4704:22;4685:4;4749:46;4790:3;4779:9;4775:19;4767:6;4749:46;:::i;:::-;4843:9;4835:6;4831:22;4826:2;4815:9;4811:18;4804:50;4877:33;4903:6;4895;4877:33;:::i;:::-;4863:47;;4958:9;4950:6;4946:22;4941:2;4930:9;4926:18;4919:50;4986:33;5012:6;5004;4986:33;:::i;:::-;-1:-1:-1;;;;;5093:15:54;;;5088:2;5073:18;;5066:43;5146:15;;;;5140:3;5125:19;;;5118:44;;;;-1:-1:-1;4978:41:54;4421:747;-1:-1:-1;;;;4421:747:54:o;5173:492::-;5348:3;5386:6;5380:13;5402:66;5461:6;5456:3;5449:4;5441:6;5437:17;5402:66;:::i;:::-;5531:13;;5490:16;;;;5553:70;5531:13;5490:16;5600:4;5588:17;;5553:70;:::i;:::-;5639:20;;5173:492;-1:-1:-1;;;;5173:492:54:o;5904:317::-;-1:-1:-1;;;;;6081:32:54;;6063:51;;6150:2;6145;6130:18;;6123:30;;;-1:-1:-1;;6170:45:54;;6196:18;;6188:6;6170:45;:::i;:::-;6162:53;5904:317;-1:-1:-1;;;;5904:317:54:o;6226:220::-;6375:2;6364:9;6357:21;6338:4;6395:45;6436:2;6425:9;6421:18;6413:6;6395:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deployToken(string,string,string)": "457902d2",
    "getTrustedForwarder()": "ce1b815f",
    "isTrustedForwarder(address)": "572b6c05",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "refute(address)": "dcbf6b14",
    "setMetaAddress(address)": "1166b54b",
    "unpause()": "3f4ba83a",
    "verified(address)": "0db065f4",
    "verify(address)": "63a9c3d7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contractUri\",\"type\":\"string\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"org\",\"type\":\"address\"}],\"name\":\"Refuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"org\",\"type\":\"address\"}],\"name\":\"Verified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractUri\",\"type\":\"string\"}],\"name\":\"deployToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"org\",\"type\":\"address\"}],\"name\":\"refute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_metaAddress\",\"type\":\"address\"}],\"name\":\"setMetaAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"verified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"org\",\"type\":\"address\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Oloyede Shadrach Temitayo (@oloyedeshadrach)\",\"custom:experimental\":\"This is an experimental contract for DeSci Labs (https://desci.com).\",\"details\":\"All functions are subject to changes in the future.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"deployToken(string,string,string)\":{\"details\":\"creates a new Desoc contract using the create2 opcode\",\"params\":{\"_contractUri\":\"the cid of the metadata to be associated to the deployed Desoc contract\",\"_name\":\"the name of the Desoc contract (passed to the constructor)\",\"_symbol\":\"the symbol of the Desoc contract (passed to the constructor)\"}},\"getTrustedForwarder()\":{\"returns\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"}},\"isTrustedForwarder(address)\":{\"params\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"},\"returns\":{\"_0\":\"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"refute(address)\":{\"details\":\"Remove an organisation's Desoc contract to the verified mapping\",\"params\":{\"org\":\"address of the Desoc smart contract\"}},\"verify(address)\":{\"details\":\"Add an organisation's Desoc contract to the verified mapping\",\"params\":{\"org\":\"address of the Desoc smart contract\"}}},\"title\":\"An experimental implementation of a soul-bound token (SBT) Factory smart contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deployToken(string,string,string)\":{\"notice\":\"Deploy a new SBT contract to be associate to the Desci Labs factory contract\"},\"getTrustedForwarder()\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\"},\"isTrustedForwarder(address)\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\"},\"refute(address)\":{\"notice\":\"Refute an organisation's verification\"},\"verify(address)\":{\"notice\":\"Verify an organisation\"}},\"notice\":\"You can use this contract to deploy a SBT contract for your organisation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Factory.sol\":\"Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=../../node_modules/@ensdomains/\",\":@opengsn/=../../node_modules/@opengsn/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=../../node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":gsn/=lib/gsn/\",\":hardhat-deploy/=../../node_modules/hardhat-deploy/\",\":hardhat/=../../node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":src/=src/\"]},\"sources\":{\"../../node_modules/@opengsn/contracts/src/ERC2771Recipient.sol\":{\"keccak256\":\"0x77b3307c570c582969ea5466f296898ab9fea1f8b61b30f1c73345fe047a89a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2a2f0642c775f89615b1717ee3db50cf3732f59bc66032b06fee6c9018e308b\",\"dweb:/ipfs/QmRtsTQeTYk6muGrU7Qurjw6FeUVUBBXXhcUQNWvCoJysT\"]},\"../../node_modules/@opengsn/contracts/src/forwarder/Forwarder.sol\":{\"keccak256\":\"0x649ea2f205b514ccafbe0bd928e0cf309cde425dfd403a73b83e276309be651a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://8c5160839d80d07d6f3aa31c0f38ddbffd8df032d1e38d164c27984e688869c7\",\"dweb:/ipfs/QmSZyRCZHizKF6AcsPJnnGtnC3mxebePap3erqzJzTFaxr\"]},\"../../node_modules/@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"keccak256\":\"0x28669953bd3dcc98a5f959fa3cac97444584b6fbe59341681b9a59f11a83b171\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://a21d3f5fb9861fecd89da8aab73fc458e48bdfd2d7d9fd8a2f05b1afe54de278\",\"dweb:/ipfs/QmcNDQsr83ASBADBQmqdrvSvRt81rhUmyJwSVTu5is7WzW\"]},\"../../node_modules/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":{\"keccak256\":\"0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68680e24b98e554eb64e724a6ddab30827d5091ae36812e2a4e1b1914481ca4c\",\"dweb:/ipfs/QmR9TVoucNzaeiAgSu1miqoQ4SZAcMCB2yRd32YuEXVWLB\"]},\"../../node_modules/hardhat/console.sol\":{\"keccak256\":\"0x60b0215121bf25612a6739fb2f1ec35f31ee82e4a8216c032c8243d904ab3aa9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e29880d33dd479bb046ba306993d26ccb779a4b1d94a046cb3567f22948bb4d\",\"dweb:/ipfs/QmfTY1qzPt5C63Wc7y6JqfZr5899NRvXYdCpyLzR5FXQic\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x77e030f213d2301babb1890b7217cec735053af39bbf89599a61bbae95b398f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f9eeb84d3b3cc95d8be04b3b1da8194cdca68b32ccd9c98af6f754318f4471\",\"dweb:/ipfs/QmUptBgvZUhNmSUYQ4c7nH3K7ai7wd3zBLWc22mJQPzQpm\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a\",\"dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x34d5fd3e73f17311fc4ae0ec192c59d5e46d585045017b41a78b8c75ab387d9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11224aad5e5e78cda2e0e8456e27121ece04e725a24d63568fa56f100dc47fb3\",\"dweb:/ipfs/QmWrpMpotNwYyWcZJUuRcwas9nuy7KYsFTQ1EELUdWQRww\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/Desoc.sol\":{\"keccak256\":\"0x06053bf5eceb26f8364aa78feb5cc35f70f4529ff646c4d007d6b4ca8c3eb3c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93299775fa12fa6b4b003eda30dca3d5d5daf3c92a80a68c5a3f3a8e51b71367\",\"dweb:/ipfs/QmULEUZzbhDike77zRmqpLcmiNv4jBzm63HKqD8eitMfhp\"]},\"src/Factory.sol\":{\"keccak256\":\"0xf954616f0c3180791acbe34ae670d2ec6b37167518a8e6e47b871fd6e6106960\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3959cf6bcdbe0cc718cc93f0b4f3adba2ebe8e2987d8fc987d22d3ebf9a49b00\",\"dweb:/ipfs/QmRRLvDmVDyaEVuLLJcjTpNZ4X1t1UES85eMrNBAjWwhvk\"]},\"src/interfaces/IDesoc.sol\":{\"keccak256\":\"0xfb14df9044370ac3695458395cf0f10c20153bf8c2b79a63e7b403a63ec11617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15b38f2940df86895c8c7a434c6e499d85fc52823dab7cd1364204ac7625babe\",\"dweb:/ipfs/QmXWW6J3QXpx7686C4bSe4jBKmbjDTNSk4FLnwKUyQucYN\"]},\"src/interfaces/IMetaHolder.sol\":{\"keccak256\":\"0x6e244768841933e3978ce527746b2f635cbfa924c0dbc24aec0202cf60cacc12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97ac6efa09dbac7420d12646bbe19e5206811356901fc14c4fa14c28275689e9\",\"dweb:/ipfs/QmS465X14Vmr5KnGeT232WwvAzuSXiFUcgr9xqZy6HHcJT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "contractUri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deployed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "org",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Refuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "org",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Verified",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractUri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTrustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "org",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "refute"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_metaAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMetaAddress"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "org",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verify"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deployToken(string,string,string)": {
            "details": "creates a new Desoc contract using the create2 opcode",
            "params": {
              "_contractUri": "the cid of the metadata to be associated to the deployed Desoc contract",
              "_name": "the name of the Desoc contract (passed to the constructor)",
              "_symbol": "the symbol of the Desoc contract (passed to the constructor)"
            }
          },
          "getTrustedForwarder()": {
            "returns": {
              "forwarder": "The address of the Forwarder contract that is being used."
            }
          },
          "isTrustedForwarder(address)": {
            "params": {
              "forwarder": "The address of the Forwarder contract that is being used."
            },
            "returns": {
              "_0": "isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."
            }
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "refute(address)": {
            "details": "Remove an organisation's Desoc contract to the verified mapping",
            "params": {
              "org": "address of the Desoc smart contract"
            }
          },
          "verify(address)": {
            "details": "Add an organisation's Desoc contract to the verified mapping",
            "params": {
              "org": "address of the Desoc smart contract"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deployToken(string,string,string)": {
            "notice": "Deploy a new SBT contract to be associate to the Desci Labs factory contract"
          },
          "getTrustedForwarder()": {
            "notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet."
          },
          "isTrustedForwarder(address)": {
            "notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder."
          },
          "refute(address)": {
            "notice": "Refute an organisation's verification"
          },
          "verify(address)": {
            "notice": "Verify an organisation"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=../../node_modules/@ensdomains/",
        ":@opengsn/=../../node_modules/@opengsn/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=../../node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":gsn/=lib/gsn/",
        ":hardhat-deploy/=../../node_modules/hardhat-deploy/",
        ":hardhat/=../../node_modules/hardhat/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":src/=src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Factory.sol": "Factory"
      },
      "libraries": {}
    },
    "sources": {
      "../../node_modules/@opengsn/contracts/src/ERC2771Recipient.sol": {
        "keccak256": "0x77b3307c570c582969ea5466f296898ab9fea1f8b61b30f1c73345fe047a89a9",
        "urls": [
          "bzz-raw://b2a2f0642c775f89615b1717ee3db50cf3732f59bc66032b06fee6c9018e308b",
          "dweb:/ipfs/QmRtsTQeTYk6muGrU7Qurjw6FeUVUBBXXhcUQNWvCoJysT"
        ],
        "license": "MIT"
      },
      "../../node_modules/@opengsn/contracts/src/forwarder/Forwarder.sol": {
        "keccak256": "0x649ea2f205b514ccafbe0bd928e0cf309cde425dfd403a73b83e276309be651a",
        "urls": [
          "bzz-raw://8c5160839d80d07d6f3aa31c0f38ddbffd8df032d1e38d164c27984e688869c7",
          "dweb:/ipfs/QmSZyRCZHizKF6AcsPJnnGtnC3mxebePap3erqzJzTFaxr"
        ],
        "license": "GPL-3.0-only"
      },
      "../../node_modules/@opengsn/contracts/src/forwarder/IForwarder.sol": {
        "keccak256": "0x28669953bd3dcc98a5f959fa3cac97444584b6fbe59341681b9a59f11a83b171",
        "urls": [
          "bzz-raw://a21d3f5fb9861fecd89da8aab73fc458e48bdfd2d7d9fd8a2f05b1afe54de278",
          "dweb:/ipfs/QmcNDQsr83ASBADBQmqdrvSvRt81rhUmyJwSVTu5is7WzW"
        ],
        "license": "GPL-3.0-only"
      },
      "../../node_modules/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol": {
        "keccak256": "0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170",
        "urls": [
          "bzz-raw://68680e24b98e554eb64e724a6ddab30827d5091ae36812e2a4e1b1914481ca4c",
          "dweb:/ipfs/QmR9TVoucNzaeiAgSu1miqoQ4SZAcMCB2yRd32YuEXVWLB"
        ],
        "license": "MIT"
      },
      "../../node_modules/hardhat/console.sol": {
        "keccak256": "0x60b0215121bf25612a6739fb2f1ec35f31ee82e4a8216c032c8243d904ab3aa9",
        "urls": [
          "bzz-raw://6e29880d33dd479bb046ba306993d26ccb779a4b1d94a046cb3567f22948bb4d",
          "dweb:/ipfs/QmfTY1qzPt5C63Wc7y6JqfZr5899NRvXYdCpyLzR5FXQic"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a",
        "urls": [
          "bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb",
          "dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x77e030f213d2301babb1890b7217cec735053af39bbf89599a61bbae95b398f4",
        "urls": [
          "bzz-raw://d8f9eeb84d3b3cc95d8be04b3b1da8194cdca68b32ccd9c98af6f754318f4471",
          "dweb:/ipfs/QmUptBgvZUhNmSUYQ4c7nH3K7ai7wd3zBLWc22mJQPzQpm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
        "urls": [
          "bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
          "dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24",
        "urls": [
          "bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a",
          "dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x34d5fd3e73f17311fc4ae0ec192c59d5e46d585045017b41a78b8c75ab387d9d",
        "urls": [
          "bzz-raw://11224aad5e5e78cda2e0e8456e27121ece04e725a24d63568fa56f100dc47fb3",
          "dweb:/ipfs/QmWrpMpotNwYyWcZJUuRcwas9nuy7KYsFTQ1EELUdWQRww"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/Desoc.sol": {
        "keccak256": "0x06053bf5eceb26f8364aa78feb5cc35f70f4529ff646c4d007d6b4ca8c3eb3c7",
        "urls": [
          "bzz-raw://93299775fa12fa6b4b003eda30dca3d5d5daf3c92a80a68c5a3f3a8e51b71367",
          "dweb:/ipfs/QmULEUZzbhDike77zRmqpLcmiNv4jBzm63HKqD8eitMfhp"
        ],
        "license": "MIT"
      },
      "src/Factory.sol": {
        "keccak256": "0xf954616f0c3180791acbe34ae670d2ec6b37167518a8e6e47b871fd6e6106960",
        "urls": [
          "bzz-raw://3959cf6bcdbe0cc718cc93f0b4f3adba2ebe8e2987d8fc987d22d3ebf9a49b00",
          "dweb:/ipfs/QmRRLvDmVDyaEVuLLJcjTpNZ4X1t1UES85eMrNBAjWwhvk"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IDesoc.sol": {
        "keccak256": "0xfb14df9044370ac3695458395cf0f10c20153bf8c2b79a63e7b403a63ec11617",
        "urls": [
          "bzz-raw://15b38f2940df86895c8c7a434c6e499d85fc52823dab7cd1364204ac7625babe",
          "dweb:/ipfs/QmXWW6J3QXpx7686C4bSe4jBKmbjDTNSk4FLnwKUyQucYN"
        ],
        "license": "MIT"
      },
      "src/interfaces/IMetaHolder.sol": {
        "keccak256": "0x6e244768841933e3978ce527746b2f635cbfa924c0dbc24aec0202cf60cacc12",
        "urls": [
          "bzz-raw://97ac6efa09dbac7420d12646bbe19e5206811356901fc14c4fa14c28275689e9",
          "dweb:/ipfs/QmS465X14Vmr5KnGeT232WwvAzuSXiFUcgr9xqZy6HHcJT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Factory.sol",
    "id": 35804,
    "exportedSymbols": {
      "Address": [
        33714
      ],
      "Context": [
        33736
      ],
      "Desoc": [
        35310
      ],
      "ECDSA": [
        34323
      ],
      "ERC165": [
        34347
      ],
      "ERC2771Recipient": [
        500
      ],
      "ERC721": [
        33223
      ],
      "Factory": [
        35803
      ],
      "Forwarder": [
        1070
      ],
      "IDesoc": [
        36142
      ],
      "IERC165": [
        34553
      ],
      "IERC2771Recipient": [
        39872
      ],
      "IERC721": [
        33339
      ],
      "IERC721Metadata": [
        33384
      ],
      "IERC721Receiver": [
        33357
      ],
      "IForwarder": [
        39005
      ],
      "IMetaHolder": [
        36266
      ],
      "Ownable": [
        32253
      ],
      "Strings": [
        33962
      ],
      "console": [
        9134
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:4479:45",
    "nodes": [
      {
        "id": 35521,
        "nodeType": "PragmaDirective",
        "src": "36:23:45",
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 35522,
        "nodeType": "ImportDirective",
        "src": "60:23:45",
        "absolutePath": "src/Desoc.sol",
        "file": "src/Desoc.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35804,
        "sourceUnit": 35311,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35523,
        "nodeType": "ImportDirective",
        "src": "84:53:45",
        "absolutePath": "../../node_modules/@opengsn/contracts/src/ERC2771Recipient.sol",
        "file": "@opengsn/contracts/src/ERC2771Recipient.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35804,
        "sourceUnit": 501,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35524,
        "nodeType": "ImportDirective",
        "src": "138:56:45",
        "absolutePath": "../../node_modules/@opengsn/contracts/src/forwarder/Forwarder.sol",
        "file": "@opengsn/contracts/src/forwarder/Forwarder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35804,
        "sourceUnit": 1071,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35525,
        "nodeType": "ImportDirective",
        "src": "196:38:45",
        "absolutePath": "src/interfaces/IMetaHolder.sol",
        "file": "./interfaces/IMetaHolder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35804,
        "sourceUnit": 36267,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35803,
        "nodeType": "ContractDefinition",
        "src": "626:3888:45",
        "nodes": [
          {
            "id": 35530,
            "nodeType": "VariableDeclaration",
            "src": "669:20:45",
            "constant": false,
            "mutability": "mutable",
            "name": "_paused",
            "nameLocation": "682:7:45",
            "scope": 35803,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 35529,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "669:4:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 35532,
            "nodeType": "VariableDeclaration",
            "src": "695:20:45",
            "constant": false,
            "functionSelector": "8da5cb5b",
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "710:5:45",
            "scope": 35803,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 35531,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "695:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 35534,
            "nodeType": "VariableDeclaration",
            "src": "721:37:45",
            "constant": false,
            "mutability": "mutable",
            "name": "metadataHolderAddress",
            "nameLocation": "737:21:45",
            "scope": 35803,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 35533,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "721:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 35538,
            "nodeType": "VariableDeclaration",
            "src": "764:40:45",
            "constant": false,
            "functionSelector": "0db065f4",
            "mutability": "mutable",
            "name": "verified",
            "nameLocation": "796:8:45",
            "scope": 35803,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 35537,
              "keyType": {
                "id": 35535,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "772:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "764:24:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 35536,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "783:4:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 35546,
            "nodeType": "EventDefinition",
            "src": "811:111:45",
            "anonymous": false,
            "eventSelector": "1b13dc64671b1e5cf76efe4493bf5ded8299383f3da8205d39f9eb9891c598e5",
            "name": "Deployed",
            "nameLocation": "817:8:45",
            "parameters": {
              "id": 35545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35540,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "851:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 35546,
                  "src": "835:21:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35542,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "882:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 35546,
                  "src": "866:21:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35544,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractUri",
                  "nameLocation": "904:11:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 35546,
                  "src": "897:18:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35543,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "825:96:45"
            }
          },
          {
            "id": 35550,
            "nodeType": "EventDefinition",
            "src": "927:36:45",
            "anonymous": false,
            "eventSelector": "6a6455914f452787eb3985452aceedc1000fb545e394eb3b370e3d08958e0a5b",
            "name": "Verified",
            "nameLocation": "933:8:45",
            "parameters": {
              "id": 35549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35548,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "org",
                  "nameLocation": "958:3:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 35550,
                  "src": "942:19:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "941:21:45"
            }
          },
          {
            "id": 35554,
            "nodeType": "EventDefinition",
            "src": "968:35:45",
            "anonymous": false,
            "eventSelector": "0447b747642c4670e25ad3282fd36423e06b0c46fb64bddad47ad78786780262",
            "name": "Refuted",
            "nameLocation": "974:7:45",
            "parameters": {
              "id": 35553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35552,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "org",
                  "nameLocation": "998:3:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 35554,
                  "src": "982:19:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "981:21:45"
            }
          },
          {
            "id": 35559,
            "nodeType": "EventDefinition",
            "src": "1086:30:45",
            "anonymous": false,
            "documentation": {
              "id": 35555,
              "nodeType": "StructuredDocumentation",
              "src": "1008:73:45",
              "text": " @dev Emitted when the pause is triggered by `account`."
            },
            "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
            "name": "Paused",
            "nameLocation": "1092:6:45",
            "parameters": {
              "id": 35558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35557,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1107:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 35559,
                  "src": "1099:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1099:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1098:17:45"
            }
          },
          {
            "id": 35564,
            "nodeType": "EventDefinition",
            "src": "1197:32:45",
            "anonymous": false,
            "documentation": {
              "id": 35560,
              "nodeType": "StructuredDocumentation",
              "src": "1122:70:45",
              "text": " @dev Emitted when the pause is lifted by `account`."
            },
            "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
            "name": "Unpaused",
            "nameLocation": "1203:8:45",
            "parameters": {
              "id": 35563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35562,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1220:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 35564,
                  "src": "1212:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1211:17:45"
            }
          },
          {
            "id": 35583,
            "nodeType": "FunctionDefinition",
            "src": "1235:134:45",
            "body": {
              "id": 35582,
              "nodeType": "Block",
              "src": "1266:103:45",
              "statements": [
                {
                  "expression": {
                    "id": 35572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35569,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35532,
                      "src": "1276:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 35570,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          465
                        ],
                        "referencedDeclaration": 465,
                        "src": "1284:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 35571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1284:12:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1276:20:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 35573,
                  "nodeType": "ExpressionStatement",
                  "src": "1276:20:45"
                },
                {
                  "expression": {
                    "id": 35576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35574,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35530,
                      "src": "1306:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 35575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1316:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1306:15:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35577,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:15:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35579,
                        "name": "forwarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35566,
                        "src": "1352:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35578,
                      "name": "_setTrustedForwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 424,
                      "src": "1331:20:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 35580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1331:31:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35581,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:31:45"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 35567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35566,
                  "mutability": "mutable",
                  "name": "forwarder",
                  "nameLocation": "1255:9:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 35583,
                  "src": "1247:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1246:19:45"
            },
            "returnParameters": {
              "id": 35568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1266:0:45"
            },
            "scope": 35803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35604,
            "nodeType": "FunctionDefinition",
            "src": "1375:160:45",
            "body": {
              "id": 35603,
              "nodeType": "Block",
              "src": "1401:134:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35587,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              465
                            ],
                            "referencedDeclaration": 465,
                            "src": "1419:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 35588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1419:12:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 35589,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35532,
                          "src": "1435:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1419:21:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "756e617574686f72697a65643a206f6e6c79206f776e6572",
                        "id": 35591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1442:26:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56b6e2819f429855bb79b0497e235f72f5d6d5b7d40ae2014d01d2dbbaf6d42e",
                          "typeString": "literal_string \"unauthorized: only owner\""
                        },
                        "value": "unauthorized: only owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56b6e2819f429855bb79b0497e235f72f5d6d5b7d40ae2014d01d2dbbaf6d42e",
                          "typeString": "literal_string \"unauthorized: only owner\""
                        }
                      ],
                      "id": 35586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1411:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1411:58:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35593,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:58:45"
                },
                {
                  "expression": {
                    "id": 35596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35594,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35530,
                      "src": "1479:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 35595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1489:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1479:14:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35597,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:14:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 35599,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            465
                          ],
                          "referencedDeclaration": 465,
                          "src": "1515:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 35600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1515:12:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35598,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35559,
                      "src": "1508:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 35601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1508:20:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35602,
                  "nodeType": "EmitStatement",
                  "src": "1503:25:45"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nameLocation": "1384:5:45",
            "parameters": {
              "id": 35584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1389:2:45"
            },
            "returnParameters": {
              "id": 35585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1401:0:45"
            },
            "scope": 35803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35625,
            "nodeType": "FunctionDefinition",
            "src": "1541:165:45",
            "body": {
              "id": 35624,
              "nodeType": "Block",
              "src": "1569:137:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35608,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              465
                            ],
                            "referencedDeclaration": 465,
                            "src": "1587:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 35609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1587:12:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 35610,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35532,
                          "src": "1603:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1587:21:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "756e617574686f72697a65643a206f6e6c79206f776e6572",
                        "id": 35612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1610:26:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56b6e2819f429855bb79b0497e235f72f5d6d5b7d40ae2014d01d2dbbaf6d42e",
                          "typeString": "literal_string \"unauthorized: only owner\""
                        },
                        "value": "unauthorized: only owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56b6e2819f429855bb79b0497e235f72f5d6d5b7d40ae2014d01d2dbbaf6d42e",
                          "typeString": "literal_string \"unauthorized: only owner\""
                        }
                      ],
                      "id": 35607,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1579:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1579:58:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35614,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:58:45"
                },
                {
                  "expression": {
                    "id": 35617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35615,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35530,
                      "src": "1647:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 35616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1657:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1647:15:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35618,
                  "nodeType": "ExpressionStatement",
                  "src": "1647:15:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 35620,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            465
                          ],
                          "referencedDeclaration": 465,
                          "src": "1686:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 35621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1686:12:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35619,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35564,
                      "src": "1677:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 35622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1677:22:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35623,
                  "nodeType": "EmitStatement",
                  "src": "1672:27:45"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nameLocation": "1550:7:45",
            "parameters": {
              "id": 35605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1557:2:45"
            },
            "returnParameters": {
              "id": 35606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1569:0:45"
            },
            "scope": 35803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35658,
            "nodeType": "FunctionDefinition",
            "src": "1712:414:45",
            "body": {
              "id": 35657,
              "nodeType": "Block",
              "src": "1767:359:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35631,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              465
                            ],
                            "referencedDeclaration": 465,
                            "src": "1798:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 35632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1798:12:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 35633,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35532,
                          "src": "1814:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1798:21:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "756e617574686f72697a65643a206f6e6c79206f776e6572",
                        "id": 35635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1833:26:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56b6e2819f429855bb79b0497e235f72f5d6d5b7d40ae2014d01d2dbbaf6d42e",
                          "typeString": "literal_string \"unauthorized: only owner\""
                        },
                        "value": "unauthorized: only owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56b6e2819f429855bb79b0497e235f72f5d6d5b7d40ae2014d01d2dbbaf6d42e",
                          "typeString": "literal_string \"unauthorized: only owner\""
                        }
                      ],
                      "id": 35630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1777:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1777:92:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35637,
                  "nodeType": "ExpressionStatement",
                  "src": "1777:92:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 35649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 35644,
                                    "name": "IMetaHolder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 36266,
                                    "src": "1966:11:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IMetaHolder_$36266_$",
                                      "typeString": "type(contract IMetaHolder)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_IMetaHolder_$36266_$",
                                      "typeString": "type(contract IMetaHolder)"
                                    }
                                  ],
                                  "id": 35643,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "1961:4:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 35645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1961:17:45",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_IMetaHolder_$36266",
                                  "typeString": "type(contract IMetaHolder)"
                                }
                              },
                              "id": 35646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1979:11:45",
                              "memberName": "interfaceId",
                              "nodeType": "MemberAccess",
                              "src": "1961:29:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 35640,
                                  "name": "_metaAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35627,
                                  "src": "1912:12:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 35639,
                                "name": "IMetaHolder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36266,
                                "src": "1900:11:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IMetaHolder_$36266_$",
                                  "typeString": "type(contract IMetaHolder)"
                                }
                              },
                              "id": 35641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1900:25:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMetaHolder_$36266",
                                "typeString": "contract IMetaHolder"
                              }
                            },
                            "id": 35642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1926:17:45",
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34552,
                            "src": "1900:43:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function (bytes4) view external returns (bool)"
                            }
                          },
                          "id": 35647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1900:104:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 35648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2008:4:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1900:112:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494d657461486f6c64657220696e74657266616365206e6f7420737570706f72746564",
                        "id": 35650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2026:37:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d727ab921a0032a5d2ca155eec0b4d044b41d656c75cb310b292ace67cc78f16",
                          "typeString": "literal_string \"IMetaHolder interface not supported\""
                        },
                        "value": "IMetaHolder interface not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d727ab921a0032a5d2ca155eec0b4d044b41d656c75cb310b292ace67cc78f16",
                          "typeString": "literal_string \"IMetaHolder interface not supported\""
                        }
                      ],
                      "id": 35638,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1879:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1879:194:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35652,
                  "nodeType": "ExpressionStatement",
                  "src": "1879:194:45"
                },
                {
                  "expression": {
                    "id": 35655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35653,
                      "name": "metadataHolderAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35534,
                      "src": "2083:21:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35654,
                      "name": "_metaAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35627,
                      "src": "2107:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2083:36:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 35656,
                  "nodeType": "ExpressionStatement",
                  "src": "2083:36:45"
                }
              ]
            },
            "functionSelector": "1166b54b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMetaAddress",
            "nameLocation": "1721:14:45",
            "parameters": {
              "id": 35628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35627,
                  "mutability": "mutable",
                  "name": "_metaAddress",
                  "nameLocation": "1744:12:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 35658,
                  "src": "1736:20:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1735:22:45"
            },
            "returnParameters": {
              "id": 35629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1767:0:45"
            },
            "scope": 35803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35728,
            "nodeType": "FunctionDefinition",
            "src": "2556:951:45",
            "body": {
              "id": 35727,
              "nodeType": "Block",
              "src": "2712:795:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 35678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 35671,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2793:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 35672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2797:6:45",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2793:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 35673,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35532,
                            "src": "2807:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2793:19:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 35677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2816:9:45",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 35675,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35802,
                              "src": "2817:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 35676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2817:8:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2793:32:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617573656421",
                        "id": 35679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2827:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59e9265fa8cb8d44d6cd177feb0423a0ec8af86f04b12649d5b020666b5ed9c7",
                          "typeString": "literal_string \"Paused!\""
                        },
                        "value": "Paused!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59e9265fa8cb8d44d6cd177feb0423a0ec8af86f04b12649d5b020666b5ed9c7",
                          "typeString": "literal_string \"Paused!\""
                        }
                      ],
                      "id": 35670,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2785:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2785:52:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35681,
                  "nodeType": "ExpressionStatement",
                  "src": "2785:52:45"
                },
                {
                  "assignments": [
                    35683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35683,
                      "mutability": "mutable",
                      "name": "code",
                      "nameLocation": "2860:4:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 35727,
                      "src": "2847:17:45",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 35682,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2847:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35700,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 35687,
                              "name": "Desoc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35310,
                              "src": "2902:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Desoc_$35310_$",
                                "typeString": "type(contract Desoc)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_Desoc_$35310_$",
                                "typeString": "type(contract Desoc)"
                              }
                            ],
                            "id": 35686,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2897:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 35688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2897:11:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_Desoc_$35310",
                            "typeString": "type(contract Desoc)"
                          }
                        },
                        "id": 35689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2909:12:45",
                        "memberName": "creationCode",
                        "nodeType": "MemberAccess",
                        "src": "2897:24:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35692,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35661,
                            "src": "2963:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 35693,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35663,
                            "src": "2986:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 35694,
                            "name": "_contractUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35665,
                            "src": "3011:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 35695,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                465
                              ],
                              "referencedDeclaration": 465,
                              "src": "3041:10:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 35696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3041:12:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 35697,
                            "name": "metadataHolderAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35534,
                            "src": "3071:21:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 35690,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2935:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 35691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2939:6:45",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2935:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 35698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2935:171:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 35684,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2867:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 35685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2871:12:45",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "2867:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 35699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2867:249:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2847:269:45"
                },
                {
                  "assignments": [
                    35702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35702,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "3134:4:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 35727,
                      "src": "3126:12:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 35701,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3126:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35710,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 35706,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                465
                              ],
                              "referencedDeclaration": 465,
                              "src": "3168:10:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 35707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3168:12:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 35704,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3151:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 35705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3155:12:45",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3151:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 35708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3151:30:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 35703,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3141:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 35709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3141:41:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3126:56:45"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3201:166:45",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3215:55:45",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3232:1:45",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "code",
                                  "nodeType": "YulIdentifier",
                                  "src": "3239:4:45"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3245:4:45",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3235:3:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3235:15:45"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "code",
                                  "nodeType": "YulIdentifier",
                                  "src": "3258:4:45"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3252:5:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3252:11:45"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "3265:4:45"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "3224:7:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3224:46:45"
                        },
                        "variableNames": [
                          {
                            "name": "token",
                            "nodeType": "YulIdentifier",
                            "src": "3215:5:45"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3313:44:45",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3338:1:45",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3341:1:45",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3331:6:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3331:12:45"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3331:12:45"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "token",
                                  "nodeType": "YulIdentifier",
                                  "src": "3305:5:45"
                                }
                              ],
                              "functionName": {
                                "name": "extcodesize",
                                "nodeType": "YulIdentifier",
                                "src": "3293:11:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3293:18:45"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "3286:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3286:26:45"
                        },
                        "nodeType": "YulIf",
                        "src": "3283:74:45"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 35683,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3239:4:45",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35683,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3258:4:45",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35702,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3265:4:45",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35668,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3215:5:45",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35668,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3305:5:45",
                      "valueSize": 1
                    }
                  ],
                  "id": 35711,
                  "nodeType": "InlineAssembly",
                  "src": "3192:175:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35716,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35668,
                        "src": "3422:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35717,
                        "name": "_contractUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35665,
                        "src": "3429:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 35713,
                            "name": "metadataHolderAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35534,
                            "src": "3388:21:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 35712,
                          "name": "IMetaHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36266,
                          "src": "3376:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMetaHolder_$36266_$",
                            "typeString": "type(contract IMetaHolder)"
                          }
                        },
                        "id": 35714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3376:34:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMetaHolder_$36266",
                          "typeString": "contract IMetaHolder"
                        }
                      },
                      "id": 35715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3411:10:45",
                      "memberName": "addSociety",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36215,
                      "src": "3376:45:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 35718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3376:66:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35719,
                  "nodeType": "ExpressionStatement",
                  "src": "3376:66:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 35721,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35668,
                        "src": "3466:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 35722,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            465
                          ],
                          "referencedDeclaration": 465,
                          "src": "3473:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 35723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3473:12:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35724,
                        "name": "_contractUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35665,
                        "src": "3487:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 35720,
                      "name": "Deployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35546,
                      "src": "3457:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 35725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3457:43:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35726,
                  "nodeType": "EmitStatement",
                  "src": "3452:48:45"
                }
              ]
            },
            "documentation": {
              "id": 35659,
              "nodeType": "StructuredDocumentation",
              "src": "2132:419:45",
              "text": "@notice Deploy a new SBT contract to be associate to the Desci Labs factory contract\n @dev creates a new Desoc contract using the create2 opcode\n @param _name the name of the Desoc contract (passed to the constructor)\n @param _symbol the symbol of the Desoc contract (passed to the constructor)\n @param _contractUri the cid of the metadata to be associated to the deployed Desoc contract"
            },
            "functionSelector": "457902d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployToken",
            "nameLocation": "2565:11:45",
            "parameters": {
              "id": 35666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35661,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2600:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 35728,
                  "src": "2586:19:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35660,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2586:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35663,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2629:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 35728,
                  "src": "2615:21:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35662,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2615:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35665,
                  "mutability": "mutable",
                  "name": "_contractUri",
                  "nameLocation": "2660:12:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 35728,
                  "src": "2646:26:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35664,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2646:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2576:102:45"
            },
            "returnParameters": {
              "id": 35669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35668,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2705:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 35728,
                  "src": "2697:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2697:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2696:15:45"
            },
            "scope": 35803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35768,
            "nodeType": "FunctionDefinition",
            "src": "3681:309:45",
            "body": {
              "id": 35767,
              "nodeType": "Block",
              "src": "3719:271:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 35745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 35740,
                                    "name": "IDesoc",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 36142,
                                    "src": "3785:6:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IDesoc_$36142_$",
                                      "typeString": "type(contract IDesoc)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_IDesoc_$36142_$",
                                      "typeString": "type(contract IDesoc)"
                                    }
                                  ],
                                  "id": 35739,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "3780:4:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 35741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3780:12:45",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_IDesoc_$36142",
                                  "typeString": "type(contract IDesoc)"
                                }
                              },
                              "id": 35742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3793:11:45",
                              "memberName": "interfaceId",
                              "nodeType": "MemberAccess",
                              "src": "3780:24:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 35736,
                                  "name": "org",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35731,
                                  "src": "3757:3:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 35735,
                                "name": "IDesoc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36142,
                                "src": "3750:6:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IDesoc_$36142_$",
                                  "typeString": "type(contract IDesoc)"
                                }
                              },
                              "id": 35737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3750:11:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDesoc_$36142",
                                "typeString": "contract IDesoc"
                              }
                            },
                            "id": 35738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3762:17:45",
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34552,
                            "src": "3750:29:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function (bytes4) view external returns (bool)"
                            }
                          },
                          "id": 35743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3750:55:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 35744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3809:4:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3750:63:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494465736f6320696e74657266616365206e6f7420737570706f72746564",
                        "id": 35746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3827:32:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48d25bba12996592c87e1af69b8e08db472f2c92b707b1c45997e13640d6f781",
                          "typeString": "literal_string \"IDesoc interface not supported\""
                        },
                        "value": "IDesoc interface not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48d25bba12996592c87e1af69b8e08db472f2c92b707b1c45997e13640d6f781",
                          "typeString": "literal_string \"IDesoc interface not supported\""
                        }
                      ],
                      "id": 35734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3729:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3729:140:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35748,
                  "nodeType": "ExpressionStatement",
                  "src": "3729:140:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35750,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              465
                            ],
                            "referencedDeclaration": 465,
                            "src": "3887:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 35751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3887:12:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 35752,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35532,
                          "src": "3903:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3887:21:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e417574686f72697a6564",
                        "id": 35754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3910:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3595d599a2425e059d165fd024119a5ad473244b9a9ec67337df6c810d34e62a",
                          "typeString": "literal_string \"UnAuthorized\""
                        },
                        "value": "UnAuthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3595d599a2425e059d165fd024119a5ad473244b9a9ec67337df6c810d34e62a",
                          "typeString": "literal_string \"UnAuthorized\""
                        }
                      ],
                      "id": 35749,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3879:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3879:46:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35756,
                  "nodeType": "ExpressionStatement",
                  "src": "3879:46:45"
                },
                {
                  "expression": {
                    "id": 35761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 35757,
                        "name": "verified",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35538,
                        "src": "3935:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 35759,
                      "indexExpression": {
                        "id": 35758,
                        "name": "org",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35731,
                        "src": "3944:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3935:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 35760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3951:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3935:20:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35762,
                  "nodeType": "ExpressionStatement",
                  "src": "3935:20:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 35764,
                        "name": "org",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35731,
                        "src": "3979:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35763,
                      "name": "Verified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35550,
                      "src": "3970:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 35765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3970:13:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35766,
                  "nodeType": "EmitStatement",
                  "src": "3965:18:45"
                }
              ]
            },
            "documentation": {
              "id": 35729,
              "nodeType": "StructuredDocumentation",
              "src": "3513:163:45",
              "text": "@notice Verify an organisation\n @dev Add an organisation's Desoc contract to the verified mapping\n @param org address of the Desoc smart contract"
            },
            "functionSelector": "63a9c3d7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "3690:6:45",
            "parameters": {
              "id": 35732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35731,
                  "mutability": "mutable",
                  "name": "org",
                  "nameLocation": "3705:3:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 35768,
                  "src": "3697:11:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3697:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3696:13:45"
            },
            "returnParameters": {
              "id": 35733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3719:0:45"
            },
            "scope": 35803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35793,
            "nodeType": "FunctionDefinition",
            "src": "4182:159:45",
            "body": {
              "id": 35792,
              "nodeType": "Block",
              "src": "4220:121:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35775,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              465
                            ],
                            "referencedDeclaration": 465,
                            "src": "4238:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 35776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4238:12:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 35777,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35532,
                          "src": "4254:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4238:21:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e417574686f72697a6564",
                        "id": 35779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4261:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3595d599a2425e059d165fd024119a5ad473244b9a9ec67337df6c810d34e62a",
                          "typeString": "literal_string \"UnAuthorized\""
                        },
                        "value": "UnAuthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3595d599a2425e059d165fd024119a5ad473244b9a9ec67337df6c810d34e62a",
                          "typeString": "literal_string \"UnAuthorized\""
                        }
                      ],
                      "id": 35774,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4230:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4230:46:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35781,
                  "nodeType": "ExpressionStatement",
                  "src": "4230:46:45"
                },
                {
                  "expression": {
                    "id": 35786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 35782,
                        "name": "verified",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35538,
                        "src": "4286:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 35784,
                      "indexExpression": {
                        "id": 35783,
                        "name": "org",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35771,
                        "src": "4295:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4286:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 35785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4302:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4286:21:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35787,
                  "nodeType": "ExpressionStatement",
                  "src": "4286:21:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 35789,
                        "name": "org",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35771,
                        "src": "4330:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35788,
                      "name": "Refuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35554,
                      "src": "4322:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 35790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4322:12:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35791,
                  "nodeType": "EmitStatement",
                  "src": "4317:17:45"
                }
              ]
            },
            "documentation": {
              "id": 35769,
              "nodeType": "StructuredDocumentation",
              "src": "3996:181:45",
              "text": "@notice Refute an organisation's verification\n @dev Remove an organisation's Desoc contract to the verified mapping\n @param org address of the Desoc smart contract"
            },
            "functionSelector": "dcbf6b14",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refute",
            "nameLocation": "4191:6:45",
            "parameters": {
              "id": 35772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35771,
                  "mutability": "mutable",
                  "name": "org",
                  "nameLocation": "4206:3:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 35793,
                  "src": "4198:11:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4198:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4197:13:45"
            },
            "returnParameters": {
              "id": 35773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4220:0:45"
            },
            "scope": 35803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35802,
            "nodeType": "FunctionDefinition",
            "src": "4436:76:45",
            "body": {
              "id": 35801,
              "nodeType": "Block",
              "src": "4481:31:45",
              "statements": [
                {
                  "expression": {
                    "id": 35799,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35530,
                    "src": "4498:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 35798,
                  "id": 35800,
                  "nodeType": "Return",
                  "src": "4491:14:45"
                }
              ]
            },
            "documentation": {
              "id": 35794,
              "nodeType": "StructuredDocumentation",
              "src": "4347:84:45",
              "text": " @dev Returns true if the contract is paused, and false otherwise."
            },
            "functionSelector": "5c975abb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "4445:6:45",
            "parameters": {
              "id": 35795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4451:2:45"
            },
            "returnParameters": {
              "id": 35798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35797,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35802,
                  "src": "4475:4:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35796,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4475:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4474:6:45"
            },
            "scope": 35803,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 35527,
              "name": "ERC2771Recipient",
              "nameLocations": [
                "646:16:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 500,
              "src": "646:16:45"
            },
            "id": 35528,
            "nodeType": "InheritanceSpecifier",
            "src": "646:16:45"
          }
        ],
        "canonicalName": "Factory",
        "contractDependencies": [
          35310
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 35526,
          "nodeType": "StructuredDocumentation",
          "src": "236:390:45",
          "text": "@title An experimental implementation of a soul-bound token (SBT) Factory smart contract\n @author Oloyede Shadrach Temitayo (@oloyedeshadrach)\n @notice You can use this contract to deploy a SBT contract for your organisation\n @dev All functions are subject to changes in the future.\n @custom:experimental This is an experimental contract for DeSci Labs (https://desci.com)."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35803,
          500,
          39872
        ],
        "name": "Factory",
        "nameLocation": "635:7:45",
        "scope": 35804,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 45
}