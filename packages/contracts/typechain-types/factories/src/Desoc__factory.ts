/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Desoc, DesocInterface } from "../../src/Desoc";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_metadata",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_metadataHolderAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "attestationHolder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "attestationMeta",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "attestations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_to",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_tokenType",
        type: "uint256",
      },
    ],
    name: "batchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "batchRevoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isDelegateRole",
        type: "bool",
      },
    ],
    name: "createAttestation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delegateRoleId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "attestationId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeDelegateRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setContractURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "attestationId",
        type: "uint256",
      },
    ],
    name: "setDelegateRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenIdToAttestation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTypes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "attestationId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "updateAttestationURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002832380380620028328339810160408190526200003491620002a8565b84846200004133620000c8565b81516200005690600190602085019062000118565b5080516200006c90600290602084019062000118565b5050600a80546001600160a01b031916331790555082516200009690600c90602086019062000118565b50600b80546001600160a01b0319166001600160a01b038316179055620000bd82620000c8565b50505050506200039b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805462000126906200035f565b90600052602060002090601f0160209004810192826200014a576000855562000195565b82601f106200016557805160ff191683800117855562000195565b8280016001018555821562000195579182015b828111156200019557825182559160200191906001019062000178565b50620001a3929150620001a7565b5090565b5b80821115620001a35760008155600101620001a8565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001e657600080fd5b81516001600160401b0380821115620002035762000203620001be565b604051601f8301601f19908116603f011681019082821181831017156200022e576200022e620001be565b816040528381526020925086838588010111156200024b57600080fd5b600091505b838210156200026f578582018301518183018401529082019062000250565b83821115620002815760008385830101525b9695505050505050565b80516001600160a01b0381168114620002a357600080fd5b919050565b600080600080600060a08688031215620002c157600080fd5b85516001600160401b0380821115620002d957600080fd5b620002e789838a01620001d4565b96506020880151915080821115620002fe57600080fd5b6200030c89838a01620001d4565b955060408801519150808211156200032357600080fd5b506200033288828901620001d4565b93505062000343606087016200028b565b915062000353608087016200028b565b90509295509295909350565b600181811c908216806200037457607f821691505b6020821081036200039557634e487b7160e01b600052602260045260246000fd5b50919050565b61248780620003ab6000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806383b74baa1161011a578063c87b56dd116100ad578063e985e9c51161007c578063e985e9c51461045a578063f004407114610496578063f15df2e5146104b6578063f2fde38b146104bf578063fdcff274146104d257600080fd5b8063c87b56dd1461042e578063dd7d82c914610441578063e2079d6a14610449578063e8a3d4851461045257600080fd5b80639bd4158f116100e95780639bd4158f146103e2578063a22cb465146103f5578063ae387ee514610408578063b88d4fde1461041b57600080fd5b806383b74baa146103a35780638da5cb5b146103b6578063938e3d7b146103c757806395d89b41146103da57600080fd5b806323b872dd1161019d57806342966c681161016c57806342966c6814610334578063443fdd94146103475780636352211e1461037557806370a0823114610388578063715018a61461039b57600080fd5b806323b872dd146102e85780632b148f18146102fb57806340c10f191461030e57806342842e0e1461032157600080fd5b8063095ea7b3116101d9578063095ea7b31461029657806318160ddd146102ab5780631c02a97c146102c257806320c5429b146102d557600080fd5b806301daf26b1461020b57806301ffc9a71461024357806306fdde0314610256578063081812fc1461026b575b600080fd5b61022e610219366004611c96565b600d6020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61022e610251366004611cc5565b6104e5565b61025e610510565b60405161023a9190611d36565b61027e610279366004611c96565b6105a2565b6040516001600160a01b03909116815260200161023a565b6102a96102a4366004611d65565b6105c9565b005b6102b460095481565b60405190815260200161023a565b6102a96102d0366004611dfa565b6106e3565b6102a96102e3366004611c96565b610773565b6102a96102f6366004611e90565b6107a5565b6102a9610309366004611f24565b6107d6565b6102a961031c366004611d65565b610911565b6102a961032f366004611e90565b610a9a565b6102a9610342366004611c96565b610ab5565b61022e610355366004611f7f565b601060209081526000928352604080842090915290825290205460ff1681565b61027e610383366004611c96565b610be1565b6102b4610396366004611fab565b610c41565b6102a9610cc7565b6102a96103b1366004611fc6565b610cdb565b6000546001600160a01b031661027e565b6102a96103d53660046120ad565b610d38565b61025e610d9d565b6102a96103f03660046120ff565b610dac565b6102a9610403366004612153565b610f66565b61025e610416366004611c96565b610f71565b6102a961042936600461217d565b61100b565b61025e61043c366004611c96565b61103d565b6102a96110ec565b6102b460085481565b61025e611154565b61022e6104683660046121f9565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6102b46104a4366004611c96565b600f6020526000908152604090205481565b6102b460075481565b6102a96104cd366004611fab565b611163565b6102a96104e0366004611c96565b61123c565b60006001600160e01b0319821663545891bf60e01b148061050a575061050a826112ce565b92915050565b60606001805461051f90612223565b80601f016020809104026020016040519081016040528092919081815260200182805461054b90612223565b80156105985780601f1061056d57610100808354040283529160200191610598565b820191906000526020600020905b81548152906001019060200180831161057b57829003601f168201915b5050505050905090565b60006105ad8261131e565b506000908152600560205260409020546001600160a01b031690565b60006105d482610be1565b9050806001600160a01b0316836001600160a01b0316036106465760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061066257506106628133610468565b6106d45760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161063d565b6106de838361137d565b505050565b6000546001600160a01b03163314806107305750610730335b60085460008181526010602090815260408083206001600160a01b038616845290915290205460ff16151560011492915050565b61073957600080fd5b60005b815181101561076f5761076782828151811061075a5761075a61225d565b6020026020010151610773565b60010161073c565b5050565b6000546001600160a01b03163314806107905750610790336106fc565b61079957600080fd5b6107a2816113eb565b50565b6107af3382611401565b6107cb5760405162461bcd60e51b815260040161063d90612273565b6106de838383611480565b6000546001600160a01b03163314806107f357506107f3336106fc565b6107fc57600080fd5b6000828152600d602052604090205460ff1661084c5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964205342207479706560881b604482015260640161063d565b60008151116108895760405162461bcd60e51b8152602060048201526009602482015268656d7074792075726960b81b604482015260640161063d565b6000828152600e6020908152604090912082516108a892840190611b89565b50600b546040516318f002a560e01b81526001600160a01b03909116906318f002a5906108db90859085906004016122c0565b600060405180830381600087803b1580156108f557600080fd5b505af1158015610909573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633148061092e575061092e336106fc565b61093757600080fd5b6000818152600d602052604090205460ff166109875760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964205342207479706560881b604482015260640161063d565b60008181526010602090815260408083206001600160a01b038616845290915290205460ff1615156001036109f55760405162461bcd60e51b8152602060048201526014602482015273111d5c1b1a58d85d194818dc9959195b9d1a585b60621b604482015260640161063d565b60098054906000610a05836122d9565b9190505550610a16826009546115ef565b600980546000908152600f60209081526040808320859055848352601082528083206001600160a01b038781168086529190935292819020805460ff19166001179055600b549354905163128d663760e11b81526004810186905260248101919091526044810192909252336064830152919091169063251acc6e906084016108db565b6106de8383836040518060200160405280600081525061100b565b6000610ac082610be1565b90506001600160a01b0381163314610b265760405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920746865206f776e65722063616e206275726e20746865697220746f60448201526235b2b760e91b606482015260840161063d565b610b2f82611609565b6000828152600f602081815260408084208054808652601084528286206001600160a01b03888116808952918652848820805460ff1916905589885295909452949055600b54905163038725f760e31b81526004810187905260248101859052604481019290925233606483015290911690631c392fb890608401600060405180830381600087803b158015610bc457600080fd5b505af1158015610bd8573d6000803e3d6000fd5b50505050505050565b6000818152600360205260408120546001600160a01b03168061050a5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161063d565b60006001600160a01b038216610cab5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161063d565b506001600160a01b031660009081526004602052604090205490565b610ccf6116aa565b610cd96000611704565b565b6000546001600160a01b0316331480610cf85750610cf8336106fc565b610d0157600080fd5b60005b82518110156106de57610d30838281518110610d2257610d2261225d565b602002602001015183610911565b600101610d04565b6000546001600160a01b0316331480610d555750610d55336106fc565b610d5e57600080fd5b610d6a600c8383611c0d565b50600b54604051636b1ae3ff60e01b81526001600160a01b0390911690636b1ae3ff906108db9085908590600401612329565b60606002805461051f90612223565b6000546001600160a01b0316331480610dc95750610dc9336106fc565b610dd257600080fd5b81610e185760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206174746573746174696f6e55524960501b604482015260640161063d565b60078054906000610e28836122d9565b9091555050600754604080513060208201529081019190915260009060600160408051601f1981840301815291815281516020928301206000818152600d8452828120805460ff19166001179055600e9093529120909150610e8b908585611c0d565b50600b546040516318f002a560e01b81526001600160a01b03909116906318f002a590610ec09084908890889060040161233d565b600060405180830381600087803b158015610eda57600080fd5b505af1158015610eee573d6000803e3d6000fd5b50505050811515600103610f60576008819055600b546040516370d894cd60e01b8152600481018390526001600160a01b03909116906370d894cd90602401600060405180830381600087803b158015610f4757600080fd5b505af1158015610f5b573d6000803e3d6000fd5b505050505b50505050565b61076f338383611754565b600e6020526000908152604090208054610f8a90612223565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb690612223565b80156110035780601f10610fd857610100808354040283529160200191611003565b820191906000526020600020905b815481529060010190602001808311610fe657829003601f168201915b505050505081565b6110153383611401565b6110315760405162461bcd60e51b815260040161063d90612273565b610f6084848484611822565b6000818152600f60209081526040808320548352600e909152902080546060919061106790612223565b80601f016020809104026020016040519081016040528092919081815260200182805461109390612223565b80156110e05780601f106110b5576101008083540402835291602001916110e0565b820191906000526020600020905b8154815290600101906020018083116110c357829003601f168201915b50505050509050919050565b6110f46116aa565b60006008819055600b546040516370d894cd60e01b815260048101929092526001600160a01b0316906370d894cd90602401600060405180830381600087803b15801561114057600080fd5b505af1158015610f60573d6000803e3d6000fd5b6060600c805461051f90612223565b61116b6116aa565b6001600160a01b0381166111d05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161063d565b6111d981611704565b600b5460405163e2f273bd60e01b81526001600160a01b0383811660048301529091169063e2f273bd906024015b600060405180830381600087803b15801561122157600080fd5b505af1158015611235573d6000803e3d6000fd5b5050505050565b6112446116aa565b6000818152600d602052604090205460ff166112985760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b21030ba3a32b9ba30ba34b7b760691b604482015260640161063d565b6008819055600b546040516370d894cd60e01b8152600481018390526001600160a01b03909116906370d894cd90602401611207565b60006001600160e01b031982166380ac58cd60e01b14806112ff57506001600160e01b03198216635b5e139f60e01b145b8061050a57506301ffc9a760e01b6001600160e01b031983161461050a565b6000818152600360205260409020546001600160a01b03166107a25760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161063d565b600081815260056020526040902080546001600160a01b0319166001600160a01b03841690811790915581906113b282610be1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006113f682610be1565b9050610b2f82611609565b60008061140d83610be1565b9050806001600160a01b0316846001600160a01b0316148061145457506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b806114785750836001600160a01b031661146d846105a2565b6001600160a01b0316145b949350505050565b826001600160a01b031661149382610be1565b6001600160a01b0316146114b95760405162461bcd60e51b815260040161063d90612360565b6001600160a01b03821661151b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161063d565b611526838383611855565b826001600160a01b031661153982610be1565b6001600160a01b03161461155f5760405162461bcd60e51b815260040161063d90612360565b600081815260056020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260048552838620805460001901905590871680865283862080546001019055868652600390945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61076f8282604051806020016040528060008152506118be565b600061161482610be1565b905061162281600084611855565b61162b82610be1565b600083815260056020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526004845282852080546000190190558785526003909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000546001600160a01b03163314610cd95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161063d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b0316036117b55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161063d565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61182d848484611480565b611839848484846118f1565b610f605760405162461bcd60e51b815260040161063d906123a5565b6001600160a01b038216158061187257506001600160a01b038316155b6106de5760405162461bcd60e51b815260206004820152601d60248201527f5468697320746f6b656e2063616e206f6e6c79206265206275726e6564000000604482015260640161063d565b6118c883836119f2565b6118d560008484846118f1565b6106de5760405162461bcd60e51b815260040161063d906123a5565b60006001600160a01b0384163b156119e757604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906119359033908990889088906004016123f7565b6020604051808303816000875af1925050508015611970575060408051601f3d908101601f1916820190925261196d91810190612434565b60015b6119cd573d80801561199e576040519150601f19603f3d011682016040523d82523d6000602084013e6119a3565b606091505b5080516000036119c55760405162461bcd60e51b815260040161063d906123a5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611478565b506001949350505050565b6001600160a01b038216611a485760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161063d565b6000818152600360205260409020546001600160a01b031615611aad5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161063d565b611ab960008383611855565b6000818152600360205260409020546001600160a01b031615611b1e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161063d565b6001600160a01b038216600081815260046020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611b9590612223565b90600052602060002090601f016020900481019282611bb75760008555611bfd565b82601f10611bd057805160ff1916838001178555611bfd565b82800160010185558215611bfd579182015b82811115611bfd578251825591602001919060010190611be2565b50611c09929150611c81565b5090565b828054611c1990612223565b90600052602060002090601f016020900481019282611c3b5760008555611bfd565b82601f10611c545782800160ff19823516178555611bfd565b82800160010185558215611bfd579182015b82811115611bfd578235825591602001919060010190611c66565b5b80821115611c095760008155600101611c82565b600060208284031215611ca857600080fd5b5035919050565b6001600160e01b0319811681146107a257600080fd5b600060208284031215611cd757600080fd5b8135611ce281611caf565b9392505050565b6000815180845260005b81811015611d0f57602081850181015186830182015201611cf3565b81811115611d21576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611ce26020830184611ce9565b80356001600160a01b0381168114611d6057600080fd5b919050565b60008060408385031215611d7857600080fd5b611d8183611d49565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611dce57611dce611d8f565b604052919050565b600067ffffffffffffffff821115611df057611df0611d8f565b5060051b60200190565b60006020808385031215611e0d57600080fd5b823567ffffffffffffffff811115611e2457600080fd5b8301601f81018513611e3557600080fd5b8035611e48611e4382611dd6565b611da5565b81815260059190911b82018301908381019087831115611e6757600080fd5b928401925b82841015611e8557833582529284019290840190611e6c565b979650505050505050565b600080600060608486031215611ea557600080fd5b611eae84611d49565b9250611ebc60208501611d49565b9150604084013590509250925092565b600067ffffffffffffffff831115611ee657611ee6611d8f565b611ef9601f8401601f1916602001611da5565b9050828152838383011115611f0d57600080fd5b828260208301376000602084830101529392505050565b60008060408385031215611f3757600080fd5b82359150602083013567ffffffffffffffff811115611f5557600080fd5b8301601f81018513611f6657600080fd5b611f7585823560208401611ecc565b9150509250929050565b60008060408385031215611f9257600080fd5b82359150611fa260208401611d49565b90509250929050565b600060208284031215611fbd57600080fd5b611ce282611d49565b60008060408385031215611fd957600080fd5b823567ffffffffffffffff811115611ff057600080fd5b8301601f8101851361200157600080fd5b80356020612011611e4383611dd6565b82815260059290921b8301810191818101908884111561203057600080fd5b938201935b838510156120555761204685611d49565b82529382019390820190612035565b98969091013596505050505050565b60008083601f84011261207657600080fd5b50813567ffffffffffffffff81111561208e57600080fd5b6020830191508360208285010111156120a657600080fd5b9250929050565b600080602083850312156120c057600080fd5b823567ffffffffffffffff8111156120d757600080fd5b6120e385828601612064565b90969095509350505050565b80358015158114611d6057600080fd5b60008060006040848603121561211457600080fd5b833567ffffffffffffffff81111561212b57600080fd5b61213786828701612064565b909450925061214a9050602085016120ef565b90509250925092565b6000806040838503121561216657600080fd5b61216f83611d49565b9150611fa2602084016120ef565b6000806000806080858703121561219357600080fd5b61219c85611d49565b93506121aa60208601611d49565b925060408501359150606085013567ffffffffffffffff8111156121cd57600080fd5b8501601f810187136121de57600080fd5b6121ed87823560208401611ecc565b91505092959194509250565b6000806040838503121561220c57600080fd5b61221583611d49565b9150611fa260208401611d49565b600181811c9082168061223757607f821691505b60208210810361225757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b8281526040602082015260006114786040830184611ce9565b6000600182016122f957634e487b7160e01b600052601160045260246000fd5b5060010190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000611478602083018486612300565b838152604060208201526000612357604083018486612300565b95945050505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061242a90830184611ce9565b9695505050505050565b60006020828403121561244657600080fd5b8151611ce281611caf56fea264697066735822122064fe7215159b650dc00ae5027eca805a6a842fbbc6b271dc926c8fe531051dfb64736f6c634300080d0033";

type DesocConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DesocConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Desoc__factory extends ContractFactory {
  constructor(...args: DesocConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _metadata: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _metadataHolderAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Desoc> {
    return super.deploy(
      _name,
      _symbol,
      _metadata,
      _owner,
      _metadataHolderAddress,
      overrides || {}
    ) as Promise<Desoc>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _metadata: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _metadataHolderAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _metadata,
      _owner,
      _metadataHolderAddress,
      overrides || {}
    );
  }
  override attach(address: string): Desoc {
    return super.attach(address) as Desoc;
  }
  override connect(signer: Signer): Desoc__factory {
    return super.connect(signer) as Desoc__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DesocInterface {
    return new utils.Interface(_abi) as DesocInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Desoc {
    return new Contract(address, _abi, signerOrProvider) as Desoc;
  }
}
