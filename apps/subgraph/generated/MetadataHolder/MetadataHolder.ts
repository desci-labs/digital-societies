// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminUpdated extends ethereum.Event {
  get params(): AdminUpdated__Params {
    return new AdminUpdated__Params(this);
  }
}

export class AdminUpdated__Params {
  _event: AdminUpdated;

  constructor(event: AdminUpdated) {
    this._event = event;
  }

  get society(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get admin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AttestationUpdated extends ethereum.Event {
  get params(): AttestationUpdated__Params {
    return new AttestationUpdated__Params(this);
  }
}

export class AttestationUpdated__Params {
  _event: AttestationUpdated;

  constructor(event: AttestationUpdated) {
    this._event = event;
  }

  get society(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get attestationId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get uri(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class DelegatesUpdated extends ethereum.Event {
  get params(): DelegatesUpdated__Params {
    return new DelegatesUpdated__Params(this);
  }
}

export class DelegatesUpdated__Params {
  _event: DelegatesUpdated;

  constructor(event: DelegatesUpdated) {
    this._event = event;
  }

  get society(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get attestationId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Issued extends ethereum.Event {
  get params(): Issued__Params {
    return new Issued__Params(this);
  }
}

export class Issued__Params {
  _event: Issued;

  constructor(event: Issued) {
    this._event = event;
  }

  get society(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get issuedBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get attestationId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Revoked extends ethereum.Event {
  get params(): Revoked__Params {
    return new Revoked__Params(this);
  }
}

export class Revoked__Params {
  _event: Revoked;

  constructor(event: Revoked) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get attestationId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get revokedBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _owner(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class SocietyUpdated extends ethereum.Event {
  get params(): SocietyUpdated__Params {
    return new SocietyUpdated__Params(this);
  }
}

export class SocietyUpdated__Params {
  _event: SocietyUpdated;

  constructor(event: SocietyUpdated) {
    this._event = event;
  }

  get society(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get uri(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class MetadataHolder extends ethereum.SmartContract {
  static bind(address: Address): MetadataHolder {
    return new MetadataHolder("MetadataHolder", address);
  }

  attestations(param0: Bytes): boolean {
    let result = super.call("attestations", "attestations(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toBoolean();
  }

  try_attestations(param0: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("attestations", "attestations(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  factoryAddress(): Address {
    let result = super.call("factoryAddress", "factoryAddress():(address)", []);

    return result[0].toAddress();
  }

  try_factoryAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "factoryAddress",
      "factoryAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isValidAttestation(society: Address, attestationId: BigInt): boolean {
    let result = super.call(
      "isValidAttestation",
      "isValidAttestation(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(society),
        ethereum.Value.fromUnsignedBigInt(attestationId)
      ]
    );

    return result[0].toBoolean();
  }

  try_isValidAttestation(
    society: Address,
    attestationId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidAttestation",
      "isValidAttestation(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(society),
        ethereum.Value.fromUnsignedBigInt(attestationId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidSociety(society: Address): boolean {
    let result = super.call(
      "isValidSociety",
      "isValidSociety(address):(bool)",
      [ethereum.Value.fromAddress(society)]
    );

    return result[0].toBoolean();
  }

  try_isValidSociety(society: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidSociety",
      "isValidSociety(address):(bool)",
      [ethereum.Value.fromAddress(society)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  societies(param0: Address): boolean {
    let result = super.call("societies", "societies(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_societies(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("societies", "societies(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _factoryAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddSocietyCall extends ethereum.Call {
  get inputs(): AddSocietyCall__Inputs {
    return new AddSocietyCall__Inputs(this);
  }

  get outputs(): AddSocietyCall__Outputs {
    return new AddSocietyCall__Outputs(this);
  }
}

export class AddSocietyCall__Inputs {
  _call: AddSocietyCall;

  constructor(call: AddSocietyCall) {
    this._call = call;
  }

  get society(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get uri(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddSocietyCall__Outputs {
  _call: AddSocietyCall;

  constructor(call: AddSocietyCall) {
    this._call = call;
  }
}

export class IssueAttestationCall extends ethereum.Call {
  get inputs(): IssueAttestationCall__Inputs {
    return new IssueAttestationCall__Inputs(this);
  }

  get outputs(): IssueAttestationCall__Outputs {
    return new IssueAttestationCall__Outputs(this);
  }
}

export class IssueAttestationCall__Inputs {
  _call: IssueAttestationCall;

  constructor(call: IssueAttestationCall) {
    this._call = call;
  }

  get attestationId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get issuedBy(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class IssueAttestationCall__Outputs {
  _call: IssueAttestationCall;

  constructor(call: IssueAttestationCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RevokeTokenCall extends ethereum.Call {
  get inputs(): RevokeTokenCall__Inputs {
    return new RevokeTokenCall__Inputs(this);
  }

  get outputs(): RevokeTokenCall__Outputs {
    return new RevokeTokenCall__Outputs(this);
  }
}

export class RevokeTokenCall__Inputs {
  _call: RevokeTokenCall;

  constructor(call: RevokeTokenCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get attestationId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _owner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get revokedby(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class RevokeTokenCall__Outputs {
  _call: RevokeTokenCall;

  constructor(call: RevokeTokenCall) {
    this._call = call;
  }
}

export class SetFactoryAddressCall extends ethereum.Call {
  get inputs(): SetFactoryAddressCall__Inputs {
    return new SetFactoryAddressCall__Inputs(this);
  }

  get outputs(): SetFactoryAddressCall__Outputs {
    return new SetFactoryAddressCall__Outputs(this);
  }
}

export class SetFactoryAddressCall__Inputs {
  _call: SetFactoryAddressCall;

  constructor(call: SetFactoryAddressCall) {
    this._call = call;
  }

  get factory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFactoryAddressCall__Outputs {
  _call: SetFactoryAddressCall;

  constructor(call: SetFactoryAddressCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateAdminCall extends ethereum.Call {
  get inputs(): UpdateAdminCall__Inputs {
    return new UpdateAdminCall__Inputs(this);
  }

  get outputs(): UpdateAdminCall__Outputs {
    return new UpdateAdminCall__Outputs(this);
  }
}

export class UpdateAdminCall__Inputs {
  _call: UpdateAdminCall;

  constructor(call: UpdateAdminCall) {
    this._call = call;
  }

  get admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateAdminCall__Outputs {
  _call: UpdateAdminCall;

  constructor(call: UpdateAdminCall) {
    this._call = call;
  }
}

export class UpdateAttestationCall extends ethereum.Call {
  get inputs(): UpdateAttestationCall__Inputs {
    return new UpdateAttestationCall__Inputs(this);
  }

  get outputs(): UpdateAttestationCall__Outputs {
    return new UpdateAttestationCall__Outputs(this);
  }
}

export class UpdateAttestationCall__Inputs {
  _call: UpdateAttestationCall;

  constructor(call: UpdateAttestationCall) {
    this._call = call;
  }

  get attestationId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get uri(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateAttestationCall__Outputs {
  _call: UpdateAttestationCall;

  constructor(call: UpdateAttestationCall) {
    this._call = call;
  }
}

export class UpdateDelegateCall extends ethereum.Call {
  get inputs(): UpdateDelegateCall__Inputs {
    return new UpdateDelegateCall__Inputs(this);
  }

  get outputs(): UpdateDelegateCall__Outputs {
    return new UpdateDelegateCall__Outputs(this);
  }
}

export class UpdateDelegateCall__Inputs {
  _call: UpdateDelegateCall;

  constructor(call: UpdateDelegateCall) {
    this._call = call;
  }

  get attestationId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateDelegateCall__Outputs {
  _call: UpdateDelegateCall;

  constructor(call: UpdateDelegateCall) {
    this._call = call;
  }
}

export class UpdateSocietyCall extends ethereum.Call {
  get inputs(): UpdateSocietyCall__Inputs {
    return new UpdateSocietyCall__Inputs(this);
  }

  get outputs(): UpdateSocietyCall__Outputs {
    return new UpdateSocietyCall__Outputs(this);
  }
}

export class UpdateSocietyCall__Inputs {
  _call: UpdateSocietyCall;

  constructor(call: UpdateSocietyCall) {
    this._call = call;
  }

  get uri(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UpdateSocietyCall__Outputs {
  _call: UpdateSocietyCall;

  constructor(call: UpdateSocietyCall) {
    this._call = call;
  }
}
