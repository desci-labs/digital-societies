// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Deployed extends ethereum.Event {
  get params(): Deployed__Params {
    return new Deployed__Params(this);
  }
}

export class Deployed__Params {
  _event: Deployed;

  constructor(event: Deployed) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get contractUri(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Refuted extends ethereum.Event {
  get params(): Refuted__Params {
    return new Refuted__Params(this);
  }
}

export class Refuted__Params {
  _event: Refuted;

  constructor(event: Refuted) {
    this._event = event;
  }

  get org(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Verified extends ethereum.Event {
  get params(): Verified__Params {
    return new Verified__Params(this);
  }
}

export class Verified__Params {
  _event: Verified;

  constructor(event: Verified) {
    this._event = event;
  }

  get org(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Factory extends ethereum.SmartContract {
  static bind(address: Address): Factory {
    return new Factory("Factory", address);
  }

  deployToken(_name: string, _symbol: string, _contractUri: string): Address {
    let result = super.call(
      "deployToken",
      "deployToken(string,string,string):(address)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_symbol),
        ethereum.Value.fromString(_contractUri)
      ]
    );

    return result[0].toAddress();
  }

  try_deployToken(
    _name: string,
    _symbol: string,
    _contractUri: string
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployToken",
      "deployToken(string,string,string):(address)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_symbol),
        ethereum.Value.fromString(_contractUri)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTrustedForwarder(): Address {
    let result = super.call(
      "getTrustedForwarder",
      "getTrustedForwarder():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getTrustedForwarder(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getTrustedForwarder",
      "getTrustedForwarder():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  verified(param0: Address): boolean {
    let result = super.call("verified", "verified(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_verified(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("verified", "verified(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get forwarder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DeployTokenCall extends ethereum.Call {
  get inputs(): DeployTokenCall__Inputs {
    return new DeployTokenCall__Inputs(this);
  }

  get outputs(): DeployTokenCall__Outputs {
    return new DeployTokenCall__Outputs(this);
  }
}

export class DeployTokenCall__Inputs {
  _call: DeployTokenCall;

  constructor(call: DeployTokenCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _contractUri(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class DeployTokenCall__Outputs {
  _call: DeployTokenCall;

  constructor(call: DeployTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RefuteCall extends ethereum.Call {
  get inputs(): RefuteCall__Inputs {
    return new RefuteCall__Inputs(this);
  }

  get outputs(): RefuteCall__Outputs {
    return new RefuteCall__Outputs(this);
  }
}

export class RefuteCall__Inputs {
  _call: RefuteCall;

  constructor(call: RefuteCall) {
    this._call = call;
  }

  get org(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RefuteCall__Outputs {
  _call: RefuteCall;

  constructor(call: RefuteCall) {
    this._call = call;
  }
}

export class SetMetaAddressCall extends ethereum.Call {
  get inputs(): SetMetaAddressCall__Inputs {
    return new SetMetaAddressCall__Inputs(this);
  }

  get outputs(): SetMetaAddressCall__Outputs {
    return new SetMetaAddressCall__Outputs(this);
  }
}

export class SetMetaAddressCall__Inputs {
  _call: SetMetaAddressCall;

  constructor(call: SetMetaAddressCall) {
    this._call = call;
  }

  get _metaAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMetaAddressCall__Outputs {
  _call: SetMetaAddressCall;

  constructor(call: SetMetaAddressCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class VerifyCall extends ethereum.Call {
  get inputs(): VerifyCall__Inputs {
    return new VerifyCall__Inputs(this);
  }

  get outputs(): VerifyCall__Outputs {
    return new VerifyCall__Outputs(this);
  }
}

export class VerifyCall__Inputs {
  _call: VerifyCall;

  constructor(call: VerifyCall) {
    this._call = call;
  }

  get org(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class VerifyCall__Outputs {
  _call: VerifyCall;

  constructor(call: VerifyCall) {
    this._call = call;
  }
}
